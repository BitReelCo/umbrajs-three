{"version":3,"file":"umbrajs-three.amd.min.js","sources":["../node_modules/@umbra3d/umbrajs/dist/native.js","../node_modules/@umbra3d/umbrajs/dist/NativeEnums.js","../node_modules/@umbra3d/umbrajs/dist/Heap.js","../node_modules/@umbra3d/umbrajs/dist/WorkerPool.js","../node_modules/@umbra3d/umbrajs/dist/wrappers.js","../node_modules/@umbra3d/umbrajs/dist/index.js","../node_modules/@umbra3d/umbrajs/dist/NativeFunctions.js","../src/ThreeFormats.ts","../src/ShaderPatcher.ts","../src/ObjectPool.ts","../src/Scene.ts","../src/Loader.ts","../src/index.ts"],"sourcesContent":["\nvar UmbraNativeAPI = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(UmbraNativeAPI) {\n  UmbraNativeAPI = UmbraNativeAPI || {};\n\nvar c;c||(c=typeof UmbraNativeAPI !== 'undefined' ? UmbraNativeAPI : {});var p={},r;for(r in c)c.hasOwnProperty(r)&&(p[r]=c[r]);function aa(a,b){throw b;}var v=\"\";document.currentScript&&(v=document.currentScript.src);_scriptDir&&(v=_scriptDir);0!==v.indexOf(\"blob:\")?v=v.substr(0,v.lastIndexOf(\"/\")+1):v=\"\";var ba=c.print||console.log.bind(console),w=c.printErr||console.warn.bind(console);for(r in p)p.hasOwnProperty(r)&&(c[r]=p[r]);p=null;c.quit&&(aa=c.quit);\nfunction ca(a,b){b||(b=16);return Math.ceil(a/b)*b}function da(a){ea||(ea={});ea[a]||(ea[a]=1,w(a))}var ea,y;c.wasmBinary&&(y=c.wasmBinary);var fa;c.noExitRuntime&&(fa=c.noExitRuntime);\"object\"!==typeof WebAssembly&&w(\"no native wasm support detected\");var z,ha=new WebAssembly.Table({initial:272,maximum:272,element:\"anyfunc\"}),A=!1;function ia(a,b){a||B(\"Assertion failed: \"+b)}function ja(a){var b=c[\"_\"+a];ia(b,\"Cannot call unknown function \"+a+\", make sure it is exported\");return b}\nfunction ka(a,b,d,e){var f={string:function(a){var b=0;if(null!==a&&void 0!==a&&0!==a){var d=(a.length<<2)+1;b=la(d);ma(a,b,d)}return b},array:function(a){var b=la(a.length);C.set(a,b);return b}},g=ja(a),k=[];a=0;if(e)for(var h=0;h<e.length;h++){var l=f[d[h]];l?(0===a&&(a=na()),k[h]=l(e[h])):k[h]=e[h]}d=g.apply(null,k);d=function(a){return\"string\"===b?D(a):\"boolean\"===b?!!a:a}(d);0!==a&&oa(a);return d}var pa=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction qa(a,b,d){var e=b+d;for(d=b;a[d]&&!(d>=e);)++d;if(16<d-b&&a.subarray&&pa)return pa.decode(a.subarray(b,d));for(e=\"\";b<d;){var f=a[b++];if(f&128){var g=a[b++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|g);else{var k=a[b++]&63;f=224==(f&240)?(f&15)<<12|g<<6|k:(f&7)<<18|g<<12|k<<6|a[b++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}return e}function D(a){return a?qa(E,a,void 0):\"\"}\nfunction ma(a,b,d){var e=E;if(0<d){d=b+d-1;for(var f=0;f<a.length;++f){var g=a.charCodeAt(f);if(55296<=g&&57343>=g){var k=a.charCodeAt(++f);g=65536+((g&1023)<<10)|k&1023}if(127>=g){if(b>=d)break;e[b++]=g}else{if(2047>=g){if(b+1>=d)break;e[b++]=192|g>>6}else{if(65535>=g){if(b+2>=d)break;e[b++]=224|g>>12}else{if(b+3>=d)break;e[b++]=240|g>>18;e[b++]=128|g>>12&63}e[b++]=128|g>>6&63}e[b++]=128|g&63}}e[b]=0}}\"undefined\"!==typeof TextDecoder&&new TextDecoder(\"utf-16le\");\nfunction ra(a){0<a%65536&&(a+=65536-a%65536);return a}var sa,C,E,ta,ua,F,G,va,wa;function xa(a){sa=a;c.HEAP8=C=new Int8Array(a);c.HEAP16=ta=new Int16Array(a);c.HEAP32=F=new Int32Array(a);c.HEAPU8=E=new Uint8Array(a);c.HEAPU16=ua=new Uint16Array(a);c.HEAPU32=G=new Uint32Array(a);c.HEAPF32=va=new Float32Array(a);c.HEAPF64=wa=new Float64Array(a)}var ya=c.TOTAL_MEMORY||134217728;c.wasmMemory?z=c.wasmMemory:z=new WebAssembly.Memory({initial:ya/65536});z&&(sa=z.buffer);ya=sa.byteLength;xa(sa);F[7368]=5272512;\nfunction Aa(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b();else{var d=b.Mb;\"number\"===typeof d?void 0===b.Jb?c.dynCall_v(d):c.dynCall_vi(d,b.Jb):d(void 0===b.Jb?null:b.Jb)}}}var Ba=[],Ca=[],Da=[],Ea=[],Fa=[];function Ga(){var a=c.preRun.shift();Ba.unshift(a)}var H=0,Ha=null,Ia=null;c.preloadedImages={};c.preloadedAudios={};function B(a){if(c.onAbort)c.onAbort(a);ba(a);w(a);A=!0;throw new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");}\nfunction Ja(){var a=I;return String.prototype.startsWith?a.startsWith(\"data:application/octet-stream;base64,\"):0===a.indexOf(\"data:application/octet-stream;base64,\")}var I=\"umbra.wasm\";if(!Ja()){var Ka=I;I=c.locateFile?c.locateFile(Ka,v):v+Ka}function La(){try{if(y)return new Uint8Array(y);throw\"both async and sync fetching of the wasm failed\";}catch(a){B(a)}}\nfunction Ma(){return y||\"function\"!==typeof fetch?new Promise(function(a){a(La())}):fetch(I,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+I+\"'\";return a.arrayBuffer()}).catch(function(){return La()})}var Oa={8103:function(){alert(\"Uploads are not supported.\")},9294:function(){alert(\"Invalid http method.\")},9575:function(a,b,d,e,f,g,k,h,l,n,u){return Na(a,b,d,e,f,g,k,h,l,n,u)}},Pa=[];Ca.push({Mb:function(){Qa()}});\nfunction Ra(a,b){Ea.unshift({Mb:a,Jb:b})}var Sa=[null,[],[]];function Ta(a,b){var d=Sa[a];0===b||10===b?((1===a?ba:w)(qa(d,0)),d.length=0):d.push(b)}var J=0;function Ua(){J+=4;return F[J-4>>2]}var Va={},Wa={};function Xa(a){for(;a.length;){var b=a.pop();a.pop()(b)}}function Ya(a){return this.fromWireType(G[a>>2])}var K={},L={},Za={};function $a(a){if(void 0===a)return\"_unknown\";a=a.replace(/[^a-zA-Z0-9_]/g,\"$\");var b=a.charCodeAt(0);return 48<=b&&57>=b?\"_\"+a:a}\nfunction ab(a,b){a=$a(a);return(new Function(\"body\",\"return function \"+a+'() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n'))(b)}function bb(a){var b=Error,d=ab(a,function(b){this.name=a;this.message=b;b=Error(b).stack;void 0!==b&&(this.stack=this.toString()+\"\\n\"+b.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});d.prototype=Object.create(b.prototype);d.prototype.constructor=d;d.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return d}\nvar cb=void 0;function db(a,b,d){function e(b){b=d(b);if(b.length!==a.length)throw new cb(\"Mismatched type converter count\");for(var e=0;e<a.length;++e)M(a[e],b[e])}a.forEach(function(a){Za[a]=b});var f=Array(b.length),g=[],k=0;b.forEach(function(a,b){L.hasOwnProperty(a)?f[b]=L[a]:(g.push(a),K.hasOwnProperty(a)||(K[a]=[]),K[a].push(function(){f[b]=L[a];++k;k===g.length&&e(f)}))});0===g.length&&e(f)}\nfunction eb(a){switch(a){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+a);}}var fb=void 0;function O(a){for(var b=\"\";E[a];)b+=fb[E[a++]];return b}var gb=void 0;function P(a){throw new gb(a);}\nfunction M(a,b,d){d=d||{};if(!(\"argPackAdvance\"in b))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var e=b.name;a||P('type \"'+e+'\" must have a positive integer typeid pointer');if(L.hasOwnProperty(a)){if(d.Wb)return;P(\"Cannot register type '\"+e+\"' twice\")}L[a]=b;delete Za[a];K.hasOwnProperty(a)&&(b=K[a],delete K[a],b.forEach(function(a){a()}))}var hb=[],Q=[{},{value:void 0},{value:null},{value:!0},{value:!1}];\nfunction ib(a){4<a&&0===--Q[a].Nb&&(Q[a]=void 0,hb.push(a))}function R(a){switch(a){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var b=hb.length?hb.pop():Q.length;Q[b]={Nb:1,value:a};return b}}function jb(a){if(null===a)return\"null\";var b=typeof a;return\"object\"===b||\"array\"===b||\"function\"===b?a.toString():\"\"+a}\nfunction kb(a,b){switch(b){case 2:return function(a){return this.fromWireType(va[a>>2])};case 3:return function(a){return this.fromWireType(wa[a>>3])};default:throw new TypeError(\"Unknown float type: \"+a);}}function lb(a){var b=Function;if(!(b instanceof Function))throw new TypeError(\"new_ called with constructor type \"+typeof b+\" which is not a function\");var d=ab(b.name||\"unknownFunctionName\",function(){});d.prototype=b.prototype;d=new d;a=b.apply(d,a);return a instanceof Object?a:d}\nfunction mb(a,b){var d=c;if(void 0===d[a].Hb){var e=d[a];d[a]=function(){d[a].Hb.hasOwnProperty(arguments.length)||P(\"Function '\"+b+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+d[a].Hb+\")!\");return d[a].Hb[arguments.length].apply(this,arguments)};d[a].Hb=[];d[a].Hb[e.Qb]=e}}\nfunction nb(a,b,d){c.hasOwnProperty(a)?((void 0===d||void 0!==c[a].Hb&&void 0!==c[a].Hb[d])&&P(\"Cannot register public name '\"+a+\"' twice\"),mb(a,a),c.hasOwnProperty(d)&&P(\"Cannot register multiple overloads of a function with the same number of arguments (\"+d+\")!\"),c[a].Hb[d]=b):(c[a]=b,void 0!==d&&(c[a].pc=d))}function ob(a,b){for(var d=[],e=0;e<a;e++)d.push(F[(b>>2)+e]);return d}\nfunction pb(a,b){a=O(a);if(void 0!==c[\"FUNCTION_TABLE_\"+a])var d=c[\"FUNCTION_TABLE_\"+a][b];else if(\"undefined\"!==typeof FUNCTION_TABLE)d=FUNCTION_TABLE[b];else{d=c[\"dynCall_\"+a];void 0===d&&(d=c[\"dynCall_\"+a.replace(/f/g,\"d\")],void 0===d&&P(\"No dynCall invoker for signature: \"+a));for(var e=[],f=1;f<a.length;++f)e.push(\"a\"+f);f=\"return function \"+(\"dynCall_\"+a+\"_\"+b)+\"(\"+e.join(\", \")+\") {\\n\";f+=\"    return dynCall(rawFunction\"+(e.length?\", \":\"\")+e.join(\", \")+\");\\n\";d=(new Function(\"dynCall\",\"rawFunction\",\nf+\"};\\n\"))(d,b)}\"function\"!==typeof d&&P(\"unknown function pointer with signature \"+a+\": \"+b);return d}var qb=void 0;function rb(a){a=sb(a);var b=O(a);S(a);return b}function tb(a,b){function d(a){f[a]||L[a]||(Za[a]?Za[a].forEach(d):(e.push(a),f[a]=!0))}var e=[],f={};b.forEach(d);throw new qb(a+\": \"+e.map(rb).join([\", \"]));}\nfunction ub(a,b,d){switch(b){case 0:return d?function(a){return C[a]}:function(a){return E[a]};case 1:return d?function(a){return ta[a>>1]}:function(a){return ua[a>>1]};case 2:return d?function(a){return F[a>>2]}:function(a){return G[a>>2]};default:throw new TypeError(\"Unknown integer type: \"+a);}}function T(a){a||P(\"Cannot use deleted val. handle = \"+a);return Q[a].value}function vb(a,b){var d=L[a];void 0===d&&P(b+\" has unknown type \"+rb(a));return d}var wb={};\nfunction xb(a){var b=wb[a];return void 0===b?O(a):b}var yb=[];function zb(a){var b=yb.length;yb.push(a);return b}function Ab(a,b){for(var d=Array(a),e=0;e<a;++e)d[e]=vb(F[(b>>2)+e],\"parameter \"+e);return d}\nfunction Bb(a,b){Cb=a;Db=b;if(Eb)if(0==a)U=function(){var a=Math.max(0,Fb+b-V())|0;setTimeout(Gb,a)},Hb=\"timeout\";else if(1==a)U=function(){Ib(Gb)},Hb=\"rAF\";else if(2==a){if(\"undefined\"===typeof setImmediate){var d=[];addEventListener(\"message\",function(a){if(\"setimmediate\"===a.data||\"setimmediate\"===a.data.target)a.stopPropagation(),d.shift()()},!0);setImmediate=function(a){d.push(a);postMessage(\"setimmediate\",\"*\")}}U=function(){setImmediate(Gb)};Hb=\"immediate\"}}function V(){B()}\nfunction Jb(a){var b=Kb;fa=!0;ia(!Eb,\"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.\");Eb=a;Kb=b;var d=\"undefined\"!==typeof b?function(){c.dynCall_vi(a,b)}:function(){c.dynCall_v(a)};var e=W;Gb=function(){if(!A)if(0<Lb.length){var a=Date.now(),b=Lb.shift();b.Mb(b.Jb);if(Mb){var k=Mb,h=0==k%1?k-1:Math.floor(k);Mb=b.fc?h:(8*k+(h+.5))/9}console.log('main loop blocker \"'+\nb.name+'\" took '+(Date.now()-a)+\" ms\");c.setStatus&&(a=c.statusMessage||\"Please wait...\",b=Mb,k=Nb.jc,b?b<k?c.setStatus(a+\" (\"+(k-b)+\"/\"+k+\")\"):c.setStatus(a):c.setStatus(\"\"));e<W||setTimeout(Gb,0)}else if(!(e<W))if(Ob=Ob+1|0,1==Cb&&1<Db&&0!=Ob%Db)U();else{0==Cb&&(Fb=V());\"timeout\"===Hb&&c.Kb&&(w(\"Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!\"),\nHb=\"\");a:if(!(A||c.preMainLoop&&!1===c.preMainLoop())){try{d()}catch(l){if(l instanceof Pb)break a;l&&\"object\"===typeof l&&l.stack&&w(\"exception thrown: \"+[l,l.stack]);throw l;}c.postMainLoop&&c.postMainLoop()}e<W||(\"object\"===typeof SDL&&SDL.audio&&SDL.audio.Yb&&SDL.audio.Yb(),U())}}}var U=null,Hb=\"\",W=0,Eb=null,Kb=0,Cb=0,Db=0,Ob=0,Lb=[],Nb={},Fb,Gb,Mb,Rb=!1,Sb=!1,Tb=[];\nfunction Ub(){function a(){Sb=document.pointerLockElement===c.canvas||document.mozPointerLockElement===c.canvas||document.webkitPointerLockElement===c.canvas||document.msPointerLockElement===c.canvas}c.preloadPlugins||(c.preloadPlugins=[]);if(!Vb){Vb=!0;try{Wb=!0}catch(d){Wb=!1,console.log(\"warning: no blob constructor, cannot create blobs with mimetypes\")}Xb=\"undefined\"!=typeof MozBlobBuilder?MozBlobBuilder:\"undefined\"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:Wb?null:console.log(\"warning: no BlobBuilder\");\nYb=\"undefined\"!=typeof window?window.URL?window.URL:window.webkitURL:void 0;c.Pb||\"undefined\"!==typeof Yb||(console.log(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\"),c.Pb=!0);c.preloadPlugins.push({canHandle:function(a){return!c.Pb&&/\\.(jpg|jpeg|png|bmp)$/i.test(a)},handle:function(a,b,f,g){var d=null;if(Wb)try{d=new Blob([a],{type:Zb(b)}),d.size!==a.length&&(d=new Blob([(new Uint8Array(a)).buffer],{type:Zb(b)}))}catch(n){da(\"Blob constructor present but fails: \"+\nn+\"; falling back to blob builder\")}d||(d=new Xb,d.append((new Uint8Array(a)).buffer),d=d.getBlob());var e=Yb.createObjectURL(d),l=new Image;l.onload=function(){ia(l.complete,\"Image \"+b+\" could not be decoded\");var d=document.createElement(\"canvas\");d.width=l.width;d.height=l.height;d.getContext(\"2d\").drawImage(l,0,0);c.preloadedImages[b]=d;Yb.revokeObjectURL(e);f&&f(a)};l.onerror=function(){console.log(\"Image \"+e+\" could not be decoded\");g&&g()};l.src=e}});c.preloadPlugins.push({canHandle:function(a){return!c.oc&&\na.substr(-4)in{\".ogg\":1,\".wav\":1,\".mp3\":1}},handle:function(a,b,f,g){function d(d){l||(l=!0,c.preloadedAudios[b]=d,f&&f(a))}function e(){l||(l=!0,c.preloadedAudios[b]=new Audio,g&&g())}var l=!1;if(Wb){try{var n=new Blob([a],{type:Zb(b)})}catch(q){return e()}n=Yb.createObjectURL(n);var u=new Audio;u.addEventListener(\"canplaythrough\",function(){d(u)},!1);u.onerror=function(){if(!l){console.log(\"warning: browser could not fully decode audio \"+b+\", trying slower base64 approach\");for(var e=\"\",f=0,g=0,\nh=0;h<a.length;h++)for(f=f<<8|a[h],g+=8;6<=g;){var k=f>>g-6&63;g-=6;e+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[k]}2==g?(e+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[(f&3)<<4],e+=\"==\"):4==g&&(e+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[(f&15)<<2],e+=\"=\");u.src=\"data:audio/x-\"+b.substr(-3)+\";base64,\"+e;d(u)}};u.src=n;$b(function(){d(u)})}else return e()}});var b=c.canvas;b&&(b.requestPointerLock=b.requestPointerLock||b.mozRequestPointerLock||\nb.webkitRequestPointerLock||b.msRequestPointerLock||function(){},b.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock||document.webkitExitPointerLock||document.msExitPointerLock||function(){},b.exitPointerLock=b.exitPointerLock.bind(document),document.addEventListener(\"pointerlockchange\",a,!1),document.addEventListener(\"mozpointerlockchange\",a,!1),document.addEventListener(\"webkitpointerlockchange\",a,!1),document.addEventListener(\"mspointerlockchange\",a,!1),c.elementPointerLock&&\nb.addEventListener(\"click\",function(a){!Sb&&c.canvas.requestPointerLock&&(c.canvas.requestPointerLock(),a.preventDefault())},!1))}}\nfunction ac(a,b,d,e){if(b&&c.Kb&&a==c.canvas)return c.Kb;var f;if(b){var g={antialias:!1,alpha:!1,mc:1};if(e)for(var k in e)g[k]=e[k];if(\"undefined\"!==typeof GL&&(f=GL.gc(a,g)))var h=GL.getContext(f).ec}else h=a.getContext(\"2d\");if(!h)return null;d&&(b||ia(\"undefined\"===typeof GLctx,\"cannot set in module if GLctx is used, but we are a non-GL context that would replace it\"),c.Kb=h,b&&GL.nc(f),c.qc=b,Tb.forEach(function(a){a()}),Ub());return h}var bc=!1,cc=void 0,Y=void 0;\nfunction dc(a,b,d){function e(){Rb=!1;var a=f.parentNode;(document.fullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||document.webkitFullscreenElement||document.webkitCurrentFullScreenElement)===a?(f.exitFullscreen=ec,cc&&f.requestPointerLock(),Rb=!0,Y?(\"undefined\"!=typeof SDL&&(F[SDL.screen>>2]=G[SDL.screen>>2]|8388608),fc(c.canvas),gc()):fc(f)):(a.parentNode.insertBefore(f,a),a.parentNode.removeChild(a),Y?(\"undefined\"!=typeof SDL&&(F[SDL.screen>>2]=G[SDL.screen>>2]&\n-8388609),fc(c.canvas),gc()):fc(f));if(c.onFullScreen)c.onFullScreen(Rb);if(c.onFullscreen)c.onFullscreen(Rb)}cc=a;Y=b;hc=d;\"undefined\"===typeof cc&&(cc=!0);\"undefined\"===typeof Y&&(Y=!1);\"undefined\"===typeof hc&&(hc=null);var f=c.canvas;bc||(bc=!0,document.addEventListener(\"fullscreenchange\",e,!1),document.addEventListener(\"mozfullscreenchange\",e,!1),document.addEventListener(\"webkitfullscreenchange\",e,!1),document.addEventListener(\"MSFullscreenChange\",e,!1));var g=document.createElement(\"div\");\nf.parentNode.insertBefore(g,f);g.appendChild(f);g.requestFullscreen=g.requestFullscreen||g.mozRequestFullScreen||g.msRequestFullscreen||(g.webkitRequestFullscreen?function(){g.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)}:null)||(g.webkitRequestFullScreen?function(){g.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)}:null);d?g.requestFullscreen({rc:d}):g.requestFullscreen()}\nfunction ic(a,b,d){w(\"Browser.requestFullScreen() is deprecated. Please call Browser.requestFullscreen instead.\");ic=function(a,b,d){dc(a,b,d)};dc(a,b,d)}function ec(){if(!Rb)return!1;(document.exitFullscreen||document.cancelFullScreen||document.mozCancelFullScreen||document.msExitFullscreen||document.webkitCancelFullScreen||function(){}).apply(document,[]);return!0}var jc=0;\nfunction Ib(a){if(\"function\"===typeof requestAnimationFrame)requestAnimationFrame(a);else{var b=Date.now();if(0===jc)jc=b+1E3/60;else for(;b+2>=jc;)jc+=1E3/60;setTimeout(a,Math.max(jc-b,0))}}function $b(a){fa=!0;setTimeout(function(){A||a()},1E4)}function Zb(a){return{jpg:\"image/jpeg\",jpeg:\"image/jpeg\",png:\"image/png\",bmp:\"image/bmp\",ogg:\"audio/ogg\",wav:\"audio/wav\",mp3:\"audio/mpeg\"}[a.substr(a.lastIndexOf(\".\")+1)]}var kc=[];\nfunction gc(){var a=c.canvas;kc.forEach(function(b){b(a.width,a.height)})}\nfunction fc(a,b,d){b&&d?(a.dc=b,a.Vb=d):(b=a.dc,d=a.Vb);var e=b,f=d;c.forcedAspectRatio&&0<c.forcedAspectRatio&&(e/f<c.forcedAspectRatio?e=Math.round(f*c.forcedAspectRatio):f=Math.round(e/c.forcedAspectRatio));if((document.fullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||document.webkitFullscreenElement||document.webkitCurrentFullScreenElement)===a.parentNode&&\"undefined\"!=typeof screen){var g=Math.min(screen.width/e,screen.height/f);e=Math.round(e*g);f=Math.round(f*\ng)}Y?(a.width!=e&&(a.width=e),a.height!=f&&(a.height=f),\"undefined\"!=typeof a.style&&(a.style.removeProperty(\"width\"),a.style.removeProperty(\"height\"))):(a.width!=b&&(a.width=b),a.height!=d&&(a.height=d),\"undefined\"!=typeof a.style&&(e!=b||f!=d?(a.style.setProperty(\"width\",e+\"px\",\"important\"),a.style.setProperty(\"height\",f+\"px\",\"important\")):(a.style.removeProperty(\"width\"),a.style.removeProperty(\"height\"))))}var Z={},lc=0;function mc(){var a=lc;lc++;return a}var Vb,Wb,Xb,Yb,hc;\nfunction nc(){if(\"undefined\"!==typeof indexedDB)return indexedDB;var a=null;\"object\"===typeof window&&(a=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB);ia(a,\"IDBStore used, but indexedDB not supported\");return a}var oc={};\nfunction pc(a,b){var d=oc[a];if(d)b(null,d);else{try{var e=nc().open(a,22)}catch(f){b(f);return}e.onupgradeneeded=function(a){var b=a.target.result;a=a.target.transaction;b.objectStoreNames.contains(\"FILE_DATA\")?a.objectStore(\"FILE_DATA\"):b.createObjectStore(\"FILE_DATA\")};e.onsuccess=function(){d=e.result;oc[a]=d;b(null,d)};e.onerror=function(a){b(this.error);a.preventDefault()}}}\nfunction qc(a,b,d){pc(a,function(a,f){if(a)return d(a);a=f.transaction([\"FILE_DATA\"],b);a.onerror=function(a){d(this.error||\"unknown error\");a.preventDefault()};a=a.objectStore(\"FILE_DATA\");d(null,a)})}function rc(a,b,d){qc(a,\"readonly\",function(a,f){if(a)return d(a);a=f.get(b);a.onsuccess=function(a){return(a=a.target.result)?d(null,a):d(\"file \"+b+\" not found\")};a.onerror=function(a){d(a)}})}\nfunction sc(a,b,d,e){qc(a,\"readwrite\",function(a,g){if(a)return e(a);a=g.put(d,b);a.onsuccess=function(){e()};a.onerror=function(a){e(a)}})}function tc(a){if(!fa&&(A=!0,Aa(Ea),c.onExit))c.onExit(a);aa(a,new Pb(a))}c._exit=tc;ma(\"GMT\",29536,4);cb=c.InternalError=bb(\"InternalError\");for(var uc=Array(256),vc=0;256>vc;++vc)uc[vc]=String.fromCharCode(vc);fb=uc;gb=c.BindingError=bb(\"BindingError\");c.count_emval_handles=function(){for(var a=0,b=5;b<Q.length;++b)void 0!==Q[b]&&++a;return a};\nc.get_first_emval=function(){for(var a=5;a<Q.length;++a)if(void 0!==Q[a])return Q[a];return null};qb=c.UnboundTypeError=bb(\"UnboundTypeError\");c.requestFullScreen=function(a,b,d){w(\"Module.requestFullScreen is deprecated. Please call Module.requestFullscreen instead.\");c.requestFullScreen=c.requestFullscreen;ic(a,b,d)};c.requestFullscreen=function(a,b,d){dc(a,b,d)};c.requestAnimationFrame=function(a){Ib(a)};c.setCanvasSize=function(a,b,d){fc(c.canvas,a,b);d||gc()};\nc.pauseMainLoop=function(){U=null;W++};c.resumeMainLoop=function(){W++;var a=Cb,b=Db,d=Eb;Eb=null;Jb(d);Bb(a,b);U()};c.getUserMedia=function(){window.getUserMedia||(window.getUserMedia=navigator.getUserMedia||navigator.mozGetUserMedia);window.getUserMedia(void 0)};c.createContext=function(a,b,d,e){return ac(a,b,d,e)};\"undefined\"!==typeof dateNow?V=dateNow:\"object\"===typeof performance&&performance&&\"function\"===typeof performance.now?V=function(){return performance.now()}:V=Date.now;\nEa.push(function(){var a=c._fflush;a&&a(0);Sa[1].length&&Ta(1,10);Sa[2].length&&Ta(2,10)});\nvar zc={U:function(){w(\"missing function: _ZN5Umbra13MiniSceneCopy7connectERK20UmbraSceneCopySource\");B(-1)},T:function(){w(\"missing function: _ZN5Umbra13MiniSceneCopy9getStatusEPf\");B(-1)},V:function(){w(\"missing function: _ZN5Umbra13MiniSceneCopyC1ERNS_11MiniRuntimeERK25UmbraSceneCopyDestinationPK20UmbraEnvironmentInfoRKN5Eigen6MatrixIfLi3ELi1ELi0ELi3ELi1EEEfi\");B(-1)},C:function(){return Ra.apply(null,arguments)},L:function(){},P:function(a,b){J=b;try{var d=D(Ua()),e=Ua();return Va.ic((void 0).stat,\nd,e)}catch(f){return B(f),-f.Lb}},w:function(a,b){J=b;return 0},O:function(a,b){J=b;try{var d=D(Ua()),e=Ua(),f=Ua();return(void 0).open(d,e,f).kc}catch(g){return B(g),-g.Lb}},N:function(a,b){J=b;return 0},s:function(){},A:function(a){var b=Wa[a];delete Wa[a];var d=b.Zb,e=b.$b,f=b.Ob,g=f.map(function(a){return a.Ub}).concat(f.map(function(a){return a.bc}));db([a],g,function(a){var g={};f.forEach(function(b,d){var e=a[d],h=b.Sb,k=b.Tb,l=a[d+f.length],n=b.ac,za=b.cc;g[b.Rb]={read:function(a){return e.fromWireType(h(k,\na))},write:function(a,b){var d=[];n(za,a,l.toWireType(d,b));Xa(d)}}});return[{name:b.name,fromWireType:function(a){var b={},d;for(d in g)b[d]=g[d].read(a);e(a);return b},toWireType:function(a,b){for(var f in g)if(!(f in b))throw new TypeError(\"Missing field\");var h=d();for(f in g)g[f].write(h,b[f]);null!==a&&a.push(e,h);return h},argPackAdvance:8,readValueFromPointer:Ya,Ib:e}]})},I:function(a,b,d,e,f){var g=eb(d);b=O(b);M(a,{name:b,fromWireType:function(a){return!!a},toWireType:function(a,b){return b?\ne:f},argPackAdvance:8,readValueFromPointer:function(a){if(1===d)var e=C;else if(2===d)e=ta;else if(4===d)e=F;else throw new TypeError(\"Unknown boolean type size: \"+b);return this.fromWireType(e[a>>g])},Ib:null})},k:function(a,b,d){a=O(a);db([],[b],function(b){b=b[0];c[a]=b.fromWireType(d);return[]})},G:function(a,b){b=O(b);M(a,{name:b,fromWireType:function(a){var b=Q[a].value;ib(a);return b},toWireType:function(a,b){return R(b)},argPackAdvance:8,readValueFromPointer:Ya,Ib:null})},u:function(a,b,d){d=\neb(d);b=O(b);M(a,{name:b,fromWireType:function(a){return a},toWireType:function(a,b){if(\"number\"!==typeof b&&\"boolean\"!==typeof b)throw new TypeError('Cannot convert \"'+jb(b)+'\" to '+this.name);return b},argPackAdvance:8,readValueFromPointer:kb(b,d),Ib:null})},e:function(a,b,d,e,f,g){var k=ob(b,d);a=O(a);f=pb(e,f);nb(a,function(){tb(\"Cannot call \"+a+\" due to unbound types\",k)},b-1);db([],k,function(d){var e=a,h=a;d=[d[0],null].concat(d.slice(1));var k=f,q=d.length;2>q&&P(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\nfor(var t=null!==d[1]&&!1,x=!1,m=1;m<d.length;++m)if(null!==d[m]&&void 0===d[m].Ib){x=!0;break}var za=\"void\"!==d[0].name,N=\"\",X=\"\";for(m=0;m<q-2;++m)N+=(0!==m?\", \":\"\")+\"arg\"+m,X+=(0!==m?\", \":\"\")+\"arg\"+m+\"Wired\";h=\"return function \"+$a(h)+\"(\"+N+\") {\\nif (arguments.length !== \"+(q-2)+\") {\\nthrowBindingError('function \"+h+\" called with ' + arguments.length + ' arguments, expected \"+(q-2)+\" args!');\\n}\\n\";x&&(h+=\"var destructors = [];\\n\");var Qb=x?\"destructors\":\"null\";N=\"throwBindingError invoker fn runDestructors retType classParam\".split(\" \");\nk=[P,k,g,Xa,d[0],d[1]];t&&(h+=\"var thisWired = classParam.toWireType(\"+Qb+\", this);\\n\");for(m=0;m<q-2;++m)h+=\"var arg\"+m+\"Wired = argType\"+m+\".toWireType(\"+Qb+\", arg\"+m+\"); // \"+d[m+2].name+\"\\n\",N.push(\"argType\"+m),k.push(d[m+2]);t&&(X=\"thisWired\"+(0<X.length?\", \":\"\")+X);h+=(za?\"var rv = \":\"\")+\"invoker(fn\"+(0<X.length?\", \":\"\")+X+\");\\n\";if(x)h+=\"runDestructors(destructors);\\n\";else for(m=t?1:2;m<d.length;++m)q=1===m?\"thisWired\":\"arg\"+(m-2)+\"Wired\",null!==d[m].Ib&&(h+=q+\"_dtor(\"+q+\"); // \"+d[m].name+\n\"\\n\",N.push(q+\"_dtor\"),k.push(d[m].Ib));za&&(h+=\"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\");N.push(h+\"}\\n\");d=lb(N).apply(null,k);m=b-1;if(!c.hasOwnProperty(e))throw new cb(\"Replacing nonexistant public symbol\");void 0!==c[e].Hb&&void 0!==m?c[e].Hb[m]=d:(c[e]=d,c[e].Qb=m);return[]})},o:function(a,b,d,e,f){function g(a){return a}b=O(b);-1===f&&(f=4294967295);var k=eb(d);if(0===e){var h=32-8*d;g=function(a){return a<<h>>>h}}var l=-1!=b.indexOf(\"unsigned\");M(a,{name:b,fromWireType:g,toWireType:function(a,\nd){if(\"number\"!==typeof d&&\"boolean\"!==typeof d)throw new TypeError('Cannot convert \"'+jb(d)+'\" to '+this.name);if(d<e||d>f)throw new TypeError('Passing a number \"'+jb(d)+'\" from JS side to C/C++ side to an argument of type \"'+b+'\", which is outside the valid range ['+e+\", \"+f+\"]!\");return l?d>>>0:d|0},argPackAdvance:8,readValueFromPointer:ub(b,k,0!==e),Ib:null})},m:function(a,b,d){function e(a){a>>=2;var b=G;return new f(b.buffer,b[a+1],b[a])}var f=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,\nUint32Array,Float32Array,Float64Array][b];d=O(d);M(a,{name:d,fromWireType:e,argPackAdvance:8,readValueFromPointer:e},{Wb:!0})},v:function(a,b){b=O(b);var d=\"std::string\"===b;M(a,{name:b,fromWireType:function(a){var b=G[a>>2];if(d){var e=E[a+4+b],k=0;0!=e&&(k=e,E[a+4+b]=0);var h=a+4;for(e=0;e<=b;++e){var l=a+4+e;if(0==E[l]){h=D(h);if(void 0===n)var n=h;else n+=String.fromCharCode(0),n+=h;h=l+1}}0!=k&&(E[a+4+b]=k)}else{n=Array(b);for(e=0;e<b;++e)n[e]=String.fromCharCode(E[a+4+e]);n=n.join(\"\")}S(a);\nreturn n},toWireType:function(a,b){b instanceof ArrayBuffer&&(b=new Uint8Array(b));var e=\"string\"===typeof b;e||b instanceof Uint8Array||b instanceof Uint8ClampedArray||b instanceof Int8Array||P(\"Cannot pass non-string to std::string\");var f=(d&&e?function(){for(var a=0,d=0;d<b.length;++d){var e=b.charCodeAt(d);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|b.charCodeAt(++d)&1023);127>=e?++a:a=2047>=e?a+2:65535>=e?a+3:a+4}return a}:function(){return b.length})(),h=wc(4+f+1);G[h>>2]=f;if(d&&e)ma(b,h+\n4,f+1);else if(e)for(e=0;e<f;++e){var l=b.charCodeAt(e);255<l&&(S(h),P(\"String has UTF-16 code units that do not fit in 8 bits\"));E[h+4+e]=l}else for(e=0;e<f;++e)E[h+4+e]=b[e];null!==a&&a.push(S,h);return h},argPackAdvance:8,readValueFromPointer:Ya,Ib:function(a){S(a)}})},H:function(a,b,d){d=O(d);if(2===b){var e=function(){return ua};var f=1}else 4===b&&(e=function(){return G},f=2);M(a,{name:d,fromWireType:function(a){for(var b=e(),d=G[a>>2],g=Array(d),n=a+4>>f,u=0;u<d;++u)g[u]=String.fromCharCode(b[n+\nu]);S(a);return g.join(\"\")},toWireType:function(a,d){var g=d.length,k=wc(4+g*b),n=e();G[k>>2]=g;for(var u=k+4>>f,q=0;q<g;++q)n[u+q]=d.charCodeAt(q);null!==a&&a.push(S,k);return k},argPackAdvance:8,readValueFromPointer:Ya,Ib:function(a){S(a)}})},B:function(a,b,d,e,f,g){Wa[a]={name:O(b),Zb:pb(d,e),$b:pb(f,g),Ob:[]}},q:function(a,b,d,e,f,g,k,h,l,n){Wa[a].Ob.push({Rb:O(b),Ub:d,Sb:pb(e,f),Tb:g,bc:k,ac:pb(h,l),cc:n})},J:function(a,b){b=O(b);M(a,{Xb:!0,name:b,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},\nh:function(a,b,d){a=T(a);b=vb(b,\"emval::as\");var e=[],f=R(e);F[d>>2]=f;return b.toWireType(e,a)},i:function(a,b,d,e){a=yb[a];b=T(b);d=xb(d);a(b,d,null,e)},a:ib,j:function(a,b){b=Ab(a,b);for(var d=b[0],e=d.name+\"_$\"+b.slice(1).map(function(a){return a.name}).join(\"_\")+\"$\",f=[\"retType\"],g=[d],k=\"\",h=0;h<a-1;++h)k+=(0!==h?\", \":\"\")+\"arg\"+h,f.push(\"argType\"+h),g.push(b[1+h]);e=\"return function \"+$a(\"methodCaller_\"+e)+\"(handle, name, destructors, args) {\\n\";var l=0;for(h=0;h<a-1;++h)e+=\"    var arg\"+h+\n\" = argType\"+h+\".readValueFromPointer(args\"+(l?\"+\"+l:\"\")+\");\\n\",l+=b[h+1].argPackAdvance;e+=\"    var rv = handle[name](\"+k+\");\\n\";for(h=0;h<a-1;++h)b[h+1].deleteObject&&(e+=\"    argType\"+h+\".deleteObject(arg\"+h+\");\\n\");d.Xb||(e+=\"    return retType.toWireType(destructors, rv);\\n\");f.push(e+\"};\\n\");a=lb(f).apply(null,g);return zb(a)},f:function(a,b){a=T(a);b=T(b);return R(a[b])},p:function(a){4<a&&(Q[a].Nb+=1)},n:function(){return R([])},b:function(a){return R(xb(a))},l:function(){return R({})},g:function(a){Xa(Q[a].value);\nib(a)},d:function(a,b,d){a=T(a);b=T(b);d=T(d);a[b]=d},c:function(a,b){a=vb(a,\"_emval_take_value\");a=a.readValueFromPointer(b);return R(a)},Q:function(){B()},r:function(a,b,d){a:for(Pa.length=0;;){var e=E[b++];if(!e){b=Pa;break a}100===e||102===e?(d=ca(d,8),Pa.push(wa[d>>3]),d+=8):105===e&&(d=ca(d,4),Pa.push(F[d>>2]),d+=4)}return Oa[a].apply(null,b)},z:function(a){(a=Z[a])&&a.abort()},X:V,y:function(a,b,d,e,f){rc(D(a),D(b),function(a,b){a?f&&xc(f,d):(a=wc(b.length),E.set(b,a),yc(e,d,a,b.length),S(a))})},\nW:function(a,b,d,e,f,g,k){sc(D(a),D(b),new Uint8Array(E.subarray(d,d+e)),function(a){a?k&&xc(k,f):g&&xc(g,f)})},E:function(a,b,d){E.set(E.subarray(b,b+d),a)},F:function(a){if(2147418112<a)return!1;for(var b=Math.max(C.length,16777216);b<a;)536870912>=b?b=ra(2*b):b=Math.min(ra((3*b+2147483648)/4),2147418112);a:{try{z.grow(b-sa.byteLength+65535>>16);xa(z.buffer);var d=1;break a}catch(e){}d=void 0}return d?!0:!1},Y:tc,x:function(){return 0},K:function(a,b,d,e){try{var f=Va.lc(a),g=Va.hc(f,b,d);F[e>>\n2]=g;return 0}catch(k){return B(k),k.Lb}},D:function(){return 0},M:function(a,b,d,e){try{for(var f=0,g=0;g<d;g++){for(var k=F[b+8*g>>2],h=F[b+(8*g+4)>>2],l=0;l<h;l++)Ta(a,E[k+l]);f+=h}F[e>>2]=f;return 0}catch(n){return B(n),n.Lb}},R:function(a){a=new Date(1E3*F[a>>2]);F[7372]=a.getUTCSeconds();F[7373]=a.getUTCMinutes();F[7374]=a.getUTCHours();F[7375]=a.getUTCDate();F[7376]=a.getUTCMonth();F[7377]=a.getUTCFullYear()-1900;F[7378]=a.getUTCDay();F[7381]=0;F[7380]=0;F[7379]=(a.getTime()-Date.UTC(a.getUTCFullYear(),\n0,1,0,0,0,0))/864E5|0;F[7382]=29536;return 29488},memory:z,t:function(){},table:ha,S:function(a){var b=Date.now()/1E3|0;a&&(F[a>>2]=b);return b}},Ac=function(){function a(a){c.asm=a.exports;H--;c.monitorRunDependencies&&c.monitorRunDependencies(H);0==H&&(null!==Ha&&(clearInterval(Ha),Ha=null),Ia&&(a=Ia,Ia=null,a()))}function b(b){a(b.instance)}function d(a){return Ma().then(function(a){return WebAssembly.instantiate(a,e)}).then(a,function(a){w(\"failed to asynchronously prepare wasm: \"+a);B(a)})}var e=\n{env:zc,wasi_unstable:zc};H++;c.monitorRunDependencies&&c.monitorRunDependencies(H);if(c.instantiateWasm)try{return c.instantiateWasm(e,a)}catch(f){return w(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){if(y||\"function\"!==typeof WebAssembly.instantiateStreaming||Ja()||\"function\"!==typeof fetch)return d(b);fetch(I,{credentials:\"same-origin\"}).then(function(a){return WebAssembly.instantiateStreaming(a,e).then(b,function(a){w(\"wasm streaming compile failed: \"+a);w(\"falling back to ArrayBuffer instantiation\");\nd(b)})})})();return{}}();c.asm=Ac;var Qa=c.___wasm_call_ctors=function(){return c.asm.Z.apply(null,arguments)};c._UmbraMeshLoadGetInfo=function(){return c.asm._.apply(null,arguments)};c._UmbraMeshLoadGetSerializedSize=function(){return c.asm.$.apply(null,arguments)};c._UmbraMeshLoadSerialize=function(){return c.asm.aa.apply(null,arguments)};c._UmbraAssetLoadGetType=function(){return c.asm.ba.apply(null,arguments)};c._UmbraTextureLoadGetInfo=function(){return c.asm.ca.apply(null,arguments)};\nc._UmbraTextureLoadGetSerializedSize=function(){return c.asm.da.apply(null,arguments)};c._UmbraTextureLoadSerialize=function(){return c.asm.ea.apply(null,arguments)};c._UmbraGeodeticToEcef=function(){return c.asm.fa.apply(null,arguments)};c._UmbraEcefToGeodetic=function(){return c.asm.ga.apply(null,arguments)};c._UmbraTextureGetMipmapLevelByteSize=function(){return c.asm.ha.apply(null,arguments)};c._UmbraTextureGetMipmapLevelOffset=function(){return c.asm.ia.apply(null,arguments)};\nvar wc=c._malloc=function(){return c.asm.ja.apply(null,arguments)};c._UmbraMeshLoadFinishExternal=function(){return c.asm.ka.apply(null,arguments)};var S=c._free=function(){return c.asm.la.apply(null,arguments)};c._UmbraConfigInit=function(){return c.asm.ma.apply(null,arguments)};c._UmbraSetAllocator=function(){return c.asm.na.apply(null,arguments)};c._UmbraSetLogger=function(){return c.asm.oa.apply(null,arguments)};c._UmbraSetHttp=function(){return c.asm.pa.apply(null,arguments)};\nc._UmbraClientCreate=function(){return c.asm.qa.apply(null,arguments)};c._UmbraClientDestroy=function(){return c.asm.ra.apply(null,arguments)};c._UmbraGetLibraryInfo=function(){return c.asm.sa.apply(null,arguments)};c._UmbraEnvironmentInfoDefaults=function(){return c.asm.ta.apply(null,arguments)};c._UmbraRuntimeCreate=function(){return c.asm.ua.apply(null,arguments)};c._UmbraRuntimeDestroy=function(){return c.asm.va.apply(null,arguments)};\nc._UmbraRuntimeUpdate=function(){return c.asm.wa.apply(null,arguments)};c._UmbraRuntimeGetStreamingState=function(){return c.asm.xa.apply(null,arguments)};c._UmbraRuntimeNextAssetUnload=function(){return c.asm.ya.apply(null,arguments)};c._UmbraAssetUnloadFinish=function(){return c.asm.za.apply(null,arguments)};c._UmbraAssetUnloadGetType=function(){return c.asm.Aa.apply(null,arguments)};c._UmbraAssetUnloadGetUserPointer=function(){return c.asm.Ba.apply(null,arguments)};\nc._UmbraRuntimeNextAssetLoad=function(){return c.asm.Ca.apply(null,arguments)};c._UmbraAssetLoadPrepare=function(){return c.asm.Da.apply(null,arguments)};c._UmbraAssetLoadFinish=function(){return c.asm.Ea.apply(null,arguments)};c._UmbraAssetLoadAbortRequested=function(){return c.asm.Fa.apply(null,arguments)};c._UmbraVertexAttributeGetElementByteSize=function(){return c.asm.Ga.apply(null,arguments)};c._UmbraMeshLoadGetData=function(){return c.asm.Ha.apply(null,arguments)};\nc._UmbraMeshStreamSetBuffers=function(){return c.asm.Ia.apply(null,arguments)};c._UmbraMeshStreamDone=function(){return c.asm.Ja.apply(null,arguments)};c._UmbraMeshStreamNext=function(){return c.asm.Ka.apply(null,arguments)};c._UmbraMaterialLoadGetInfo=function(){return c.asm.La.apply(null,arguments)};c._UmbraTextureLoadGetData=function(){return c.asm.Ma.apply(null,arguments)};c._UmbraTextureMetaDataLoadGetData=function(){return c.asm.Na.apply(null,arguments)};\nc._UmbraTextureMetaDataGetClassificationCount=function(){return c.asm.Oa.apply(null,arguments)};c._UmbraTextureMetaDataGetClassification=function(){return c.asm.Pa.apply(null,arguments)};c._UmbraTextureMetaDataGetClassificationAmount=function(){return c.asm.Qa.apply(null,arguments)};c._UmbraSceneCreate=function(){return c.asm.Ra.apply(null,arguments)};c._UmbraSceneCreatePublic=function(){return c.asm.Sa.apply(null,arguments)};c._UmbraSceneCreateLocal=function(){return c.asm.Ta.apply(null,arguments)};\nc._UmbraSceneDestroy=function(){return c.asm.Ua.apply(null,arguments)};c._UmbraSceneGetConnectionStatus=function(){return c.asm.Va.apply(null,arguments)};c._UmbraSceneGetInfo=function(){return c.asm.Wa.apply(null,arguments)};c._UmbraSceneSetTransform=function(){return c.asm.Xa.apply(null,arguments)};c._UmbraSceneCopyCreate=function(){return c.asm.Ya.apply(null,arguments)};c._UmbraSceneCopyDestroy=function(){return c.asm.Za.apply(null,arguments)};\nc._UmbraSceneCopyGetStatus=function(){return c.asm._a.apply(null,arguments)};c._UmbraSceneCopyGetError=function(){return c.asm.$a.apply(null,arguments)};c._UmbraViewCreate=function(){return c.asm.ab.apply(null,arguments)};c._UmbraViewDestroy=function(){return c.asm.bb.apply(null,arguments)};c._UmbraViewUpdateRendering=function(){return c.asm.cb.apply(null,arguments)};c._UmbraViewUpdateFilter=function(){return c.asm.db.apply(null,arguments)};\nc._UmbraViewGetCompleted=function(){return c.asm.eb.apply(null,arguments)};c._UmbraViewResetRenderables=function(){return c.asm.fb.apply(null,arguments)};c._UmbraViewNextRenderables=function(){return c.asm.gb.apply(null,arguments)};c._UmbraViewRayQuery=function(){return c.asm.hb.apply(null,arguments)};c._UmbraSendInternalMessage=function(){return c.asm.ib.apply(null,arguments)};var sb=c.___getTypeName=function(){return c.asm.jb.apply(null,arguments)};\nc.___embind_register_native_and_builtin_types=function(){return c.asm.kb.apply(null,arguments)};var na=c.stackSave=function(){return c.asm.lb.apply(null,arguments)},la=c.stackAlloc=function(){return c.asm.mb.apply(null,arguments)},oa=c.stackRestore=function(){return c.asm.nb.apply(null,arguments)},xc=c.dynCall_vi=function(){return c.asm.ob.apply(null,arguments)};c.dynCall_v=function(){return c.asm.pb.apply(null,arguments)};c.dynCall_iiiiiiiiii=function(){return c.asm.qb.apply(null,arguments)};\nc.dynCall_viiiiiiiii=function(){return c.asm.rb.apply(null,arguments)};c.dynCall_iiiii=function(){return c.asm.sb.apply(null,arguments)};c.dynCall_iiii=function(){return c.asm.tb.apply(null,arguments)};c.dynCall_iii=function(){return c.asm.ub.apply(null,arguments)};c.dynCall_ii=function(){return c.asm.vb.apply(null,arguments)};c.dynCall_vii=function(){return c.asm.wb.apply(null,arguments)};c.dynCall_iiiiii=function(){return c.asm.xb.apply(null,arguments)};\nc.dynCall_viiiii=function(){return c.asm.yb.apply(null,arguments)};c.dynCall_iiiiiiii=function(){return c.asm.zb.apply(null,arguments)};c.dynCall_viiiiiii=function(){return c.asm.Ab.apply(null,arguments)};c.dynCall_i=function(){return c.asm.Bb.apply(null,arguments)};var yc=c.dynCall_viii=function(){return c.asm.Cb.apply(null,arguments)};c.dynCall_viiii=function(){return c.asm.Db.apply(null,arguments)};c.dynCall_jiji=function(){return c.asm.Eb.apply(null,arguments)};\nc.dynCall_iidiiii=function(){return c.asm.Fb.apply(null,arguments)};c.dynCall_viiiiii=function(){return c.asm.Gb.apply(null,arguments)};c.asm=Ac;c.cwrap=function(a,b,d,e){d=d||[];var f=d.every(function(a){return\"number\"===a});return\"string\"!==b&&f&&!e?ja(a):function(){return ka(a,b,d,arguments)}};var Bc;c.then=function(a){if(Bc)a(c);else{var b=c.onRuntimeInitialized;c.onRuntimeInitialized=function(){b&&b();a(c)}}return c};\nfunction Pb(a){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+a+\")\";this.status=a}Ia=function Cc(){Bc||Dc();Bc||(Ia=Cc)};\nfunction Dc(){function a(){if(!Bc&&(Bc=!0,!A)){Aa(Ca);Aa(Da);if(c.onRuntimeInitialized)c.onRuntimeInitialized();if(c.postRun)for(\"function\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var a=c.postRun.shift();Fa.unshift(a)}Aa(Fa)}}if(!(0<H)){if(c.preRun)for(\"function\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)Ga();Aa(Ba);0<H||(c.setStatus?(c.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){c.setStatus(\"\")},1);a()},1)):a())}}c.run=Dc;\nif(c.preInit)for(\"function\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();Dc();c.maxBytesDownloaded=0;c.minBytesDownloaded=0;c.URLsDownloaded=new Set([]);c.wgetRequests=Z;\nfunction Na(a,b,d,e,f,g,k,h,l,n,u){var q=D(a);b=D(b);g=D(g);var t=new XMLHttpRequest;t.open(b,q,!0);if(\"GET\"!=b||0!=g.length)t.withCredentials=!0;t.responseType=\"arraybuffer\";var x=mc();t.onload=function(){if(200==t.status){var b=new Uint8Array(t.response),g=c.URLsDownloaded;c.maxBytesDownloaded+=t.response.byteLength;g.has(a)||(g.add(a),c.minBytesDownloaded+=t.response.byteLength);n?b.length!=u?c.dynCall_viii(f,x,d,0):(E.set(b,n),c.dynCall_viiii(e,x,d,null,0)):(g=wc(b.length),E.set(b,g),c.dynCall_viiii(e,\nx,d,g,b.length),S(g))}else c.dynCall_viii(f,x,d,t.status);delete Z[x]};t.onerror=function(){c.dynCall_viii(f,x,d,t.status);delete Z[x]};t.onabort=function(){delete Z[x]};0!=g.length&&t.setRequestHeader(\"Authorization\",\"Basic \"+btoa(g+\":\"));l=D(l).split(\"\\n\");if(2<=l.length)for(q=0;q<l.length;q+=2)t.setRequestHeader(l[q],l[q+1]);\"POST\"==b?t.send(C.slice(k,k+h)):t.send(null);Z[x]=t;return x};\n\n\n  return UmbraNativeAPI\n}\n);\n})();\nexport default UmbraNativeAPI;","// Generated at 2020-11-13 15:44:29\nexport var MatrixFormat;\n(function (MatrixFormat) {\n    MatrixFormat[MatrixFormat[\"ColumnMajor\"] = 0] = \"ColumnMajor\";\n    MatrixFormat[MatrixFormat[\"RowMajor\"] = 1] = \"RowMajor\";\n    MatrixFormat[MatrixFormat[\"Count\"] = 2] = \"Count\";\n})(MatrixFormat || (MatrixFormat = {}));\nexport var TextureType;\n(function (TextureType) {\n    TextureType[TextureType[\"Diffuse\"] = 0] = \"Diffuse\";\n    TextureType[TextureType[\"Normal\"] = 1] = \"Normal\";\n    TextureType[TextureType[\"Specular\"] = 2] = \"Specular\";\n    TextureType[TextureType[\"MetaIndex\"] = 3] = \"MetaIndex\";\n    TextureType[TextureType[\"Count\"] = 4] = \"Count\";\n})(TextureType || (TextureType = {}));\nexport var TextureFormat;\n(function (TextureFormat) {\n    TextureFormat[TextureFormat[\"RGBA32\"] = 0] = \"RGBA32\";\n    TextureFormat[TextureFormat[\"RGB24\"] = 1] = \"RGB24\";\n    TextureFormat[TextureFormat[\"BC1\"] = 2] = \"BC1\";\n    TextureFormat[TextureFormat[\"BC3\"] = 3] = \"BC3\";\n    TextureFormat[TextureFormat[\"BC4\"] = 4] = \"BC4\";\n    TextureFormat[TextureFormat[\"BC5\"] = 5] = \"BC5\";\n    TextureFormat[TextureFormat[\"ETC1_RGB\"] = 6] = \"ETC1_RGB\";\n    TextureFormat[TextureFormat[\"RGBA_FLOAT32\"] = 7] = \"RGBA_FLOAT32\";\n    TextureFormat[TextureFormat[\"UNC1\"] = 8] = \"UNC1\";\n    TextureFormat[TextureFormat[\"JPEG\"] = 9] = \"JPEG\";\n    TextureFormat[TextureFormat[\"PNG\"] = 10] = \"PNG\";\n    TextureFormat[TextureFormat[\"BMP\"] = 11] = \"BMP\";\n    TextureFormat[TextureFormat[\"PSD\"] = 12] = \"PSD\";\n    TextureFormat[TextureFormat[\"TGA\"] = 13] = \"TGA\";\n    TextureFormat[TextureFormat[\"GIF\"] = 14] = \"GIF\";\n    TextureFormat[TextureFormat[\"HDR\"] = 15] = \"HDR\";\n    TextureFormat[TextureFormat[\"PIC\"] = 16] = \"PIC\";\n    TextureFormat[TextureFormat[\"PNM\"] = 17] = \"PNM\";\n    TextureFormat[TextureFormat[\"ASTC_4X4\"] = 18] = \"ASTC_4X4\";\n    TextureFormat[TextureFormat[\"ASTC_5X4\"] = 19] = \"ASTC_5X4\";\n    TextureFormat[TextureFormat[\"ASTC_5X5\"] = 20] = \"ASTC_5X5\";\n    TextureFormat[TextureFormat[\"ASTC_6X5\"] = 21] = \"ASTC_6X5\";\n    TextureFormat[TextureFormat[\"ASTC_6X6\"] = 22] = \"ASTC_6X6\";\n    TextureFormat[TextureFormat[\"ASTC_8X5\"] = 23] = \"ASTC_8X5\";\n    TextureFormat[TextureFormat[\"ASTC_8X6\"] = 24] = \"ASTC_8X6\";\n    TextureFormat[TextureFormat[\"ASTC_10X5\"] = 25] = \"ASTC_10X5\";\n    TextureFormat[TextureFormat[\"ASTC_10X6\"] = 26] = \"ASTC_10X6\";\n    TextureFormat[TextureFormat[\"ASTC_8X8\"] = 27] = \"ASTC_8X8\";\n    TextureFormat[TextureFormat[\"ASTC_10X8\"] = 28] = \"ASTC_10X8\";\n    TextureFormat[TextureFormat[\"ASTC_10X10\"] = 29] = \"ASTC_10X10\";\n    TextureFormat[TextureFormat[\"ASTC_12X10\"] = 30] = \"ASTC_12X10\";\n    TextureFormat[TextureFormat[\"ASTC_12X12\"] = 31] = \"ASTC_12X12\";\n    TextureFormat[TextureFormat[\"ARGB32\"] = 32] = \"ARGB32\";\n    TextureFormat[TextureFormat[\"R8\"] = 33] = \"R8\";\n    TextureFormat[TextureFormat[\"PVRTC1_RGB4\"] = 34] = \"PVRTC1_RGB4\";\n    TextureFormat[TextureFormat[\"PVRTC1_RGBA4\"] = 35] = \"PVRTC1_RGBA4\";\n    TextureFormat[TextureFormat[\"UINT8\"] = 36] = \"UINT8\";\n    TextureFormat[TextureFormat[\"UINT16\"] = 37] = \"UINT16\";\n    TextureFormat[TextureFormat[\"UINT32\"] = 38] = \"UINT32\";\n    TextureFormat[TextureFormat[\"RGB565\"] = 39] = \"RGB565\";\n    TextureFormat[TextureFormat[\"RG8\"] = 40] = \"RG8\";\n    TextureFormat[TextureFormat[\"RG16F\"] = 41] = \"RG16F\";\n    TextureFormat[TextureFormat[\"OPENEXR\"] = 42] = \"OPENEXR\";\n    TextureFormat[TextureFormat[\"RGBA_FLOAT16\"] = 43] = \"RGBA_FLOAT16\";\n    TextureFormat[TextureFormat[\"RGB_FLOAT16\"] = 44] = \"RGB_FLOAT16\";\n    TextureFormat[TextureFormat[\"RGB_FLOAT32\"] = 45] = \"RGB_FLOAT32\";\n    TextureFormat[TextureFormat[\"BC6H\"] = 46] = \"BC6H\";\n    TextureFormat[TextureFormat[\"BC7\"] = 47] = \"BC7\";\n    TextureFormat[TextureFormat[\"Count\"] = 48] = \"Count\";\n})(TextureFormat || (TextureFormat = {}));\nexport var ColorSpace;\n(function (ColorSpace) {\n    ColorSpace[ColorSpace[\"Linear\"] = 0] = \"Linear\";\n    ColorSpace[ColorSpace[\"SRGB\"] = 1] = \"SRGB\";\n    ColorSpace[ColorSpace[\"Count\"] = 2] = \"Count\";\n})(ColorSpace || (ColorSpace = {}));\nexport var VertexAttribute;\n(function (VertexAttribute) {\n    VertexAttribute[VertexAttribute[\"Position\"] = 0] = \"Position\";\n    VertexAttribute[VertexAttribute[\"TextureCoordinate\"] = 1] = \"TextureCoordinate\";\n    VertexAttribute[VertexAttribute[\"Normal\"] = 2] = \"Normal\";\n    VertexAttribute[VertexAttribute[\"Tangent\"] = 3] = \"Tangent\";\n    VertexAttribute[VertexAttribute[\"Count\"] = 4] = \"Count\";\n})(VertexAttribute || (VertexAttribute = {}));\nexport var BufferFlags;\n(function (BufferFlags) {\n    BufferFlags[BufferFlags[\"UncachedMemory\"] = 1] = \"UncachedMemory\";\n})(BufferFlags || (BufferFlags = {}));\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Debug\"] = 0] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Count\"] = 4] = \"Count\";\n})(LogLevel || (LogLevel = {}));\nexport var TransferStatus;\n(function (TransferStatus) {\n    TransferStatus[TransferStatus[\"Inactive\"] = 0] = \"Inactive\";\n    TransferStatus[TransferStatus[\"Active\"] = 1] = \"Active\";\n    TransferStatus[TransferStatus[\"Complete\"] = 2] = \"Complete\";\n    TransferStatus[TransferStatus[\"Error\"] = 3] = \"Error\";\n    TransferStatus[TransferStatus[\"Count\"] = 4] = \"Count\";\n})(TransferStatus || (TransferStatus = {}));\nexport var HeaderError;\n(function (HeaderError) {\n    HeaderError[HeaderError[\"Found\"] = 0] = \"Found\";\n    HeaderError[HeaderError[\"Not_Found\"] = 1] = \"Not_Found\";\n    HeaderError[HeaderError[\"Transfer_Not_Complete\"] = 2] = \"Transfer_Not_Complete\";\n    HeaderError[HeaderError[\"Buffer_Too_Small\"] = 3] = \"Buffer_Too_Small\";\n    HeaderError[HeaderError[\"Count\"] = 4] = \"Count\";\n})(HeaderError || (HeaderError = {}));\nexport var HttpMethod;\n(function (HttpMethod) {\n    HttpMethod[HttpMethod[\"Get\"] = 0] = \"Get\";\n    HttpMethod[HttpMethod[\"Post\"] = 1] = \"Post\";\n    HttpMethod[HttpMethod[\"Put\"] = 2] = \"Put\";\n    HttpMethod[HttpMethod[\"Delete\"] = 3] = \"Delete\";\n    HttpMethod[HttpMethod[\"Count\"] = 4] = \"Count\";\n})(HttpMethod || (HttpMethod = {}));\nexport var LibraryInfo;\n(function (LibraryInfo) {\n    LibraryInfo[LibraryInfo[\"Version\"] = 0] = \"Version\";\n    LibraryInfo[LibraryInfo[\"Copyright\"] = 1] = \"Copyright\";\n    LibraryInfo[LibraryInfo[\"BuildTime\"] = 2] = \"BuildTime\";\n    LibraryInfo[LibraryInfo[\"BuildId\"] = 3] = \"BuildId\";\n    LibraryInfo[LibraryInfo[\"Count\"] = 4] = \"Count\";\n})(LibraryInfo || (LibraryInfo = {}));\nexport var InvalidUserPointer;\n(function (InvalidUserPointer) {\n    InvalidUserPointer[InvalidUserPointer[\"InvalidUserPointer\"] = 0] = \"InvalidUserPointer\";\n})(InvalidUserPointer || (InvalidUserPointer = {}));\nexport var TextureSupportFlags;\n(function (TextureSupportFlags) {\n    TextureSupportFlags[TextureSupportFlags[\"None\"] = 0] = \"None\";\n    TextureSupportFlags[TextureSupportFlags[\"BC1\"] = 1] = \"BC1\";\n    TextureSupportFlags[TextureSupportFlags[\"BC2\"] = 2] = \"BC2\";\n    TextureSupportFlags[TextureSupportFlags[\"BC3\"] = 4] = \"BC3\";\n    TextureSupportFlags[TextureSupportFlags[\"BC4\"] = 8] = \"BC4\";\n    TextureSupportFlags[TextureSupportFlags[\"BC5\"] = 16] = \"BC5\";\n    TextureSupportFlags[TextureSupportFlags[\"BC6H\"] = 32] = \"BC6H\";\n    TextureSupportFlags[TextureSupportFlags[\"BC7\"] = 64] = \"BC7\";\n    TextureSupportFlags[TextureSupportFlags[\"ASTC\"] = 128] = \"ASTC\";\n    TextureSupportFlags[TextureSupportFlags[\"ETC1\"] = 256] = \"ETC1\";\n    TextureSupportFlags[TextureSupportFlags[\"ETC2\"] = 512] = \"ETC2\";\n    TextureSupportFlags[TextureSupportFlags[\"EAC_R\"] = 1024] = \"EAC_R\";\n    TextureSupportFlags[TextureSupportFlags[\"EAC_RG\"] = 2048] = \"EAC_RG\";\n    TextureSupportFlags[TextureSupportFlags[\"PVRTC1\"] = 4096] = \"PVRTC1\";\n    TextureSupportFlags[TextureSupportFlags[\"PVRTC2\"] = 8192] = \"PVRTC2\";\n    TextureSupportFlags[TextureSupportFlags[\"ATC\"] = 16384] = \"ATC\";\n    TextureSupportFlags[TextureSupportFlags[\"HalfFloat\"] = 32768] = \"HalfFloat\";\n    TextureSupportFlags[TextureSupportFlags[\"Float\"] = 65536] = \"Float\";\n    TextureSupportFlags[TextureSupportFlags[\"All\"] = 2147483647] = \"All\";\n})(TextureSupportFlags || (TextureSupportFlags = {}));\nexport var RuntimeFlags;\n(function (RuntimeFlags) {\n    RuntimeFlags[RuntimeFlags[\"NeverUnload\"] = 1] = \"NeverUnload\";\n    RuntimeFlags[RuntimeFlags[\"ExclusiveRendering\"] = 2] = \"ExclusiveRendering\";\n    RuntimeFlags[RuntimeFlags[\"EnableRayQueries\"] = 4] = \"EnableRayQueries\";\n})(RuntimeFlags || (RuntimeFlags = {}));\nexport var ConnectionStatus;\n(function (ConnectionStatus) {\n    ConnectionStatus[ConnectionStatus[\"Connected\"] = 0] = \"Connected\";\n    ConnectionStatus[ConnectionStatus[\"Connecting\"] = 1] = \"Connecting\";\n    ConnectionStatus[ConnectionStatus[\"ConnectionError\"] = 2] = \"ConnectionError\";\n    ConnectionStatus[ConnectionStatus[\"Count\"] = 3] = \"Count\";\n})(ConnectionStatus || (ConnectionStatus = {}));\nexport var DepthRange;\n(function (DepthRange) {\n    DepthRange[DepthRange[\"ZeroToOne\"] = 0] = \"ZeroToOne\";\n    DepthRange[DepthRange[\"MinusOneToOne\"] = 1] = \"MinusOneToOne\";\n    DepthRange[DepthRange[\"Count\"] = 2] = \"Count\";\n})(DepthRange || (DepthRange = {}));\nexport var FilterShapeType;\n(function (FilterShapeType) {\n    FilterShapeType[FilterShapeType[\"Sphere\"] = 0] = \"Sphere\";\n    FilterShapeType[FilterShapeType[\"Cylinder\"] = 1] = \"Cylinder\";\n    FilterShapeType[FilterShapeType[\"None\"] = 2] = \"None\";\n    FilterShapeType[FilterShapeType[\"Count\"] = 3] = \"Count\";\n})(FilterShapeType || (FilterShapeType = {}));\nexport var SceneCopyStatus;\n(function (SceneCopyStatus) {\n    SceneCopyStatus[SceneCopyStatus[\"InProgress\"] = 0] = \"InProgress\";\n    SceneCopyStatus[SceneCopyStatus[\"Done\"] = 1] = \"Done\";\n    SceneCopyStatus[SceneCopyStatus[\"Error\"] = 2] = \"Error\";\n    SceneCopyStatus[SceneCopyStatus[\"Count\"] = 3] = \"Count\";\n})(SceneCopyStatus || (SceneCopyStatus = {}));\nexport var SceneCopyDestinationType;\n(function (SceneCopyDestinationType) {\n    SceneCopyDestinationType[SceneCopyDestinationType[\"File\"] = 0] = \"File\";\n    SceneCopyDestinationType[SceneCopyDestinationType[\"Directory\"] = 1] = \"Directory\";\n    SceneCopyDestinationType[SceneCopyDestinationType[\"FormatObj\"] = 3] = \"FormatObj\";\n    SceneCopyDestinationType[SceneCopyDestinationType[\"IndexJson\"] = 4] = \"IndexJson\";\n    SceneCopyDestinationType[SceneCopyDestinationType[\"Count\"] = 5] = \"Count\";\n})(SceneCopyDestinationType || (SceneCopyDestinationType = {}));\nexport var SceneCopySourceType;\n(function (SceneCopySourceType) {\n    SceneCopySourceType[SceneCopySourceType[\"Directory\"] = 0] = \"Directory\";\n    SceneCopySourceType[SceneCopySourceType[\"Cloud\"] = 1] = \"Cloud\";\n    SceneCopySourceType[SceneCopySourceType[\"Count\"] = 2] = \"Count\";\n})(SceneCopySourceType || (SceneCopySourceType = {}));\nexport var AssetType;\n(function (AssetType) {\n    AssetType[AssetType[\"Material\"] = 0] = \"Material\";\n    AssetType[AssetType[\"Texture\"] = 1] = \"Texture\";\n    AssetType[AssetType[\"Mesh\"] = 2] = \"Mesh\";\n    AssetType[AssetType[\"Count\"] = 3] = \"Count\";\n})(AssetType || (AssetType = {}));\nexport var AssetLoadResult;\n(function (AssetLoadResult) {\n    AssetLoadResult[AssetLoadResult[\"Failure\"] = 0] = \"Failure\";\n    AssetLoadResult[AssetLoadResult[\"OutOfMemory\"] = 1] = \"OutOfMemory\";\n    AssetLoadResult[AssetLoadResult[\"Aborted\"] = 2] = \"Aborted\";\n    AssetLoadResult[AssetLoadResult[\"Success\"] = 3] = \"Success\";\n    AssetLoadResult[AssetLoadResult[\"Count\"] = 4] = \"Count\";\n})(AssetLoadResult || (AssetLoadResult = {}));\nexport var RayQueryFlags;\n(function (RayQueryFlags) {\n    RayQueryFlags[RayQueryFlags[\"BackfaceCulling\"] = 1] = \"BackfaceCulling\";\n})(RayQueryFlags || (RayQueryFlags = {}));\n//# sourceMappingURL=NativeEnums.js.map","export const Primitive = {\n    Int8: 'Int8',\n    Int16: 'Int16',\n    Int32: 'Int32',\n    Uint8: 'Uint8',\n    Uint16: 'Uint16',\n    Uint32: 'Uint32',\n    Float32: 'Float32',\n    Float64: 'Float64',\n};\n//# sourceMappingURL=Heap.js.map","export class WorkerPool {\n    constructor(numWorkers, workerScriptURL) {\n        // Array of web workers\n        this.workers = [];\n        // Array of corresponding worker queues\n        this.infos = [];\n        this.aborted = false;\n        if (!window['Worker']) {\n            console.error('WebWorker support required');\n            return;\n        }\n        for (let i = 0; i < numWorkers; i++) {\n            const worker = new Worker(workerScriptURL);\n            worker.onmessage = msg => {\n                const { userData, resolve } = this.infos[i].queue.shift();\n                if (this.aborted) {\n                    return;\n                }\n                if (!msg.data['finalResponse']) {\n                    console.error('emscripten_worker_respond_provisionally is not supported');\n                    return;\n                }\n                resolve({ buffer: msg.data.data, userData });\n            };\n            worker.onerror = msg => {\n                console.error(`Worker call failed. Is worker's script URL \"${workerScriptURL}\" correct? Message:`, msg.message);\n                // The queue is empty if \"onerror\" was called for worker load failure, so we need this check.\n                if (this.infos[i].queue.length > 0) {\n                    const { userData, reject } = this.infos[i].queue.shift();\n                    reject({ userData, error: msg });\n                }\n            };\n            const info = {\n                queue: [],\n            };\n            this.workers.push(worker);\n            this.infos.push(info);\n        }\n    }\n    destroy() {\n        this.aborted = true;\n        for (const w of this.workers) {\n            w.terminate();\n        }\n    }\n    /**\n     * Sends a binary message to a WebWorker.\n     */\n    callWorker(id, funcName, message, userData) {\n        const transferObject = {\n            funcName: funcName,\n            callbackId: '',\n            data: message,\n        };\n        // We transfer the ownership of \"message\" to the worker. This means it can't point\n        // to a view of the Emscripten heap because the whole heap would get transferred!\n        this.workers[id].postMessage(transferObject, [message.buffer]);\n        // The promise will settle when a worker response triggers \"onmessage\" callback\n        // above and calls one the \"resolve\" and \"reject\" functions off the queue.\n        // The worker is guaranteed to handle and respond to messages in order, so this\n        // all works out nicely.\n        return new Promise((resolve, reject) => {\n            this.infos[id].queue.push({ resolve, reject, userData });\n        });\n    }\n    findMostAvailableWorker() {\n        let best_id = -1;\n        let best = 1e9;\n        for (let i = 0; i < this.workers.length; i++) {\n            if (this.infos[i].queue.length < best) {\n                best_id = i;\n                best = this.infos[i].queue.length;\n            }\n        }\n        return best_id;\n    }\n    shortestQueueLength() {\n        let shortest = 1e9;\n        for (const info of this.infos) {\n            shortest = Math.min(shortest, info.queue.length);\n        }\n        return shortest;\n    }\n    numLoadsPending() {\n        let sum = 0;\n        for (const info of this.infos) {\n            sum += info.queue.length;\n        }\n        return sum;\n    }\n    numWorkers() {\n        return this.workers.length;\n    }\n}\n//# sourceMappingURL=WorkerPool.js.map","import { Primitive } from './Heap';\nimport * as Assets from './Assets';\nimport * as Native from './NativeTypes';\nimport { TextureFormat, TextureSupportFlags } from './NativeTypes';\nimport { AssetType, AssetLoadResult } from './NativeEnums';\nimport { WorkerPool } from './WorkerPool';\nconst MAX_LIGHTS = 32;\nconst MAX_NUM_WORKERS = 8;\nfunction assertInteger(x) {\n    if (!Number.isInteger(x)) {\n        throw new Error('Value was not integer: ' + x.toString());\n    }\n}\nfunction isArrayLike(x) {\n    return Array.isArray(x) || (ArrayBuffer.isView(x) && !(x instanceof DataView));\n}\nfunction hardwareConcurrency() {\n    if ('hardwareConcurrency' in navigator) {\n        return navigator.hardwareConcurrency;\n    }\n    return 1;\n}\n/**\n * We need to use a factory here since the native API classes depend on the Emscripten generated wasm code\n * that can't be loaded as a regular ES6 module. The \"Module\" object allows access to C++ functions and the\n * Emscripten heap.\n */\nconst create = (Module) => {\n    const primitiveToArrayType = new Map([\n        [Primitive.Int8, Int8Array],\n        [Primitive.Int16, Int16Array],\n        [Primitive.Int32, Int32Array],\n        [Primitive.Uint8, Uint8Array],\n        [Primitive.Uint16, Uint16Array],\n        [Primitive.Uint32, Uint32Array],\n        [Primitive.Float32, Float32Array],\n        [Primitive.Float64, Float64Array],\n    ]);\n    // gl.texImage2D expects these texture \"type\" and typed array combinations.\n    // See https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D\n    const textureFormatToPrimitive = new Map([\n        [TextureFormat.RGB565, Primitive.Uint16],\n        [TextureFormat.RGBA32, Primitive.Uint8],\n        [TextureFormat.RG8, Primitive.Uint8],\n        [TextureFormat.RG16F, Primitive.Uint16],\n        [TextureFormat.RGB_FLOAT32, Primitive.Float32],\n        [TextureFormat.RGB24, Primitive.Uint8],\n        [TextureFormat.UINT32, Primitive.Uint32],\n    ]);\n    /**\n     * A Buffer is a block of memory in the Emscripten heap. Typed arrays may get detached when Emscripten\n     * memory growth happens, so any JS code that wants to read from the heap needs to create its typed views\n     * right before they are used.\n     *\n     * The views are safe to use during synchronous execution, but for example a 'yield' in a generator may\n     * trigger memory growth before the caller gets the returned value.\n     */\n    class Buffer {\n        constructor(size) {\n            if (size === 0) {\n                throw new Error('Buffer size was zero');\n            }\n            this.ptr = Module.umbraAlloc(size);\n            if (this.ptr === 0) {\n                throw new Error(`Allocation of ${size} bytes failed.`);\n            }\n            this.size = size; // In bytes\n        }\n        destroy() {\n            Module.umbraFree(this.ptr);\n            this.ptr = 0;\n            this.size = 0;\n        }\n        /**\n         * A destructive resize operation that never shrinks the buffer.\n         * NOTE: Does *not* copy the old data over.\n         */\n        ensureSize(newSize) {\n            if (this.size < newSize) {\n                this.destroy();\n                this.ptr = Module.umbraAlloc(newSize);\n                if (this.ptr === 0) {\n                    throw new Error(`Buffer growth to ${newSize} bytes failed.`);\n                }\n                this.size = newSize;\n            }\n        }\n        floats() {\n            return new Float32Array(Module.HEAPF32.buffer, this.ptr, this.size / 4);\n        }\n        bytes() {\n            return new Uint8Array(Module.HEAPU8.buffer, this.ptr, this.size);\n        }\n    }\n    /**\n     * A HeapView holds a reference to a block of Emscripten heap memory.\n     * Calling getArray() returns a typed view into the block. This class is needed because\n     * regular TypedArray views into the heap get neutered (become unusable) at memory growth,\n     * so we can't safely pass them to the application.\n     */\n    class HeapView {\n        constructor(ptr, size, type) {\n            this.primitiveToHeap = new Map([\n                [Primitive.Int8, 'HEAP8'],\n                [Primitive.Int16, 'HEAP16'],\n                [Primitive.Int32, 'HEAP32'],\n                [Primitive.Uint8, 'HEAPU8'],\n                [Primitive.Uint16, 'HEAPU16'],\n                [Primitive.Uint32, 'HEAPU32'],\n                [Primitive.Float32, 'HEAPF32'],\n                [Primitive.Float64, 'HEAPF64'],\n            ]);\n            this.ptr = ptr;\n            this.size = size;\n            // Find out which Emscripten heap view we need to use and which TypedArray constructor to call.\n            if (this.primitiveToHeap.has(type) && primitiveToArrayType.has(type)) {\n                this.heapName = this.primitiveToHeap.get(type);\n                this.arrayType = primitiveToArrayType.get(type);\n            }\n            else {\n                throw new TypeError(`BufferView constructor got invalid type '${type}'`);\n            }\n        }\n        getArray() {\n            // eslint-disable-next-line new-cap\n            return new this.arrayType(Module[this.heapName].buffer, this.ptr, this.size / this.arrayType.BYTES_PER_ELEMENT);\n        }\n    }\n    // Struct field offsets are required for zero-copy interop\n    const renderableStructOffsets = Module.getRenderableMemberOffsets();\n    function copyMat4(buf, elements) {\n        for (let i = 0; i < 16; i++) {\n            buf[i] = elements[i];\n        }\n    }\n    function copyVec3(buf, elements) {\n        buf[0] = elements[0];\n        buf[1] = elements[1];\n        buf[2] = elements[2];\n    }\n    class Client {\n        constructor() {\n            this.configPtr = Module.umbraAlloc(Module.CONFIG_SIZE);\n            Module.configInit(this.configPtr);\n            this.ptr = Module.clientCreate('UmbraJS', this.configPtr);\n        }\n        destroy() {\n            Module.clientDestroy(this.ptr);\n            Module.umbraFree(this.configPtr);\n            this.ptr = 0;\n        }\n    }\n    class NativeScene {\n        constructor(ptr) {\n            this.matrixBuffer = new Buffer(16 * 4);\n            this.infoBuffer = new Buffer(Module.sceneInfoSize);\n            this.ptr = ptr;\n        }\n        destroy() {\n            this.matrixBuffer.destroy();\n            this.infoBuffer.destroy();\n            Module.sceneDestroy(this.ptr);\n            this.ptr = 0;\n        }\n        connectionStatus() {\n            return Module.sceneGetConnectionStatus(this.ptr);\n        }\n        getInfo() {\n            Module.sceneGetInfo(this.ptr, this.infoBuffer.ptr);\n            return Module.deserializeSceneInfo(this.infoBuffer.ptr);\n        }\n        isConnected() {\n            return this.connectionStatus() === Native.ConnectionStatus.Connected;\n        }\n        setTransform(matrix) {\n            if (!isArrayLike(matrix)) {\n                throw new TypeError('Matrix should be an array');\n            }\n            if (matrix.length !== 16) {\n                throw new TypeError('Matrix should be of size 4x4');\n            }\n            copyMat4(this.matrixBuffer.floats(), matrix);\n            Module.sceneSetTransform(this.ptr, this.matrixBuffer.ptr);\n        }\n    }\n    class View {\n        constructor(ptr, runtimeAssets) {\n            this.ptr = ptr;\n            this.matrixBuffer = new Buffer(16 * 4);\n            this.vectorBuffer = new Buffer(4 * 4);\n            this.lightBuffer = new Buffer(MAX_LIGHTS * 3 * 4);\n            this.temp = undefined;\n            this.runtimeAssets = runtimeAssets;\n        }\n        destroy() {\n            this.matrixBuffer.destroy();\n            this.vectorBuffer.destroy();\n            this.lightBuffer.destroy();\n            if (this.temp) {\n                this.temp.destroy();\n            }\n            Module.viewDestroy(this.ptr);\n            this.ptr = 0;\n        }\n        setCamera(worldToClip, positionVector, quality, lights = [], depthRange = Native.DepthRange.MinusOneToOne, matrixFormat = Native.MatrixFormat.ColumnMajor) {\n            if (!isArrayLike(worldToClip)) {\n                throw new TypeError('Camera matrix should be an array');\n            }\n            if (!isArrayLike(positionVector)) {\n                throw new TypeError('Position should be an array');\n            }\n            if (typeof quality !== 'number') {\n                throw new TypeError('Quality should be a number');\n            }\n            if (worldToClip.length !== 16) {\n                throw new TypeError('WorldToClip matrix should be of size 4x4');\n            }\n            if (positionVector.length !== 3) {\n                throw new TypeError('Position vector should be of length 3');\n            }\n            copyMat4(this.matrixBuffer.floats(), worldToClip);\n            copyVec3(this.vectorBuffer.floats(), positionVector);\n            if (lights) {\n                if (lights.length > MAX_LIGHTS) {\n                    throw new Error('Too many lights given');\n                }\n                const buffer = this.lightBuffer.floats();\n                for (let i = 0; i < lights.length; i++) {\n                    buffer[3 * i + 0] = lights[i][0];\n                    buffer[3 * i + 1] = lights[i][1];\n                    buffer[3 * i + 2] = lights[i][2];\n                }\n            }\n            Module.viewUpdateRendering(this.ptr, this.matrixBuffer.ptr, this.vectorBuffer.ptr, depthRange, matrixFormat, quality, this.lightBuffer.ptr, lights.length);\n        }\n        getVisible(batchSize) {\n            assertInteger(batchSize);\n            const bufferSize = batchSize * Module.renderableSize;\n            // Check if we should enlarge or allocate the temp buffer\n            if (!this.temp || this.temp.size < bufferSize) {\n                if (this.temp) {\n                    this.temp.destroy();\n                }\n                this.temp = new Buffer(bufferSize);\n            }\n            const temp = this.temp;\n            const strideInWords = Module.renderableSize / 4;\n            const bufferWordSize = bufferSize / 4;\n            assertInteger(strideInWords);\n            assertInteger(bufferWordSize);\n            const getView = (arrayType, heap, ptr, ofs) => {\n                assertInteger(ofs / 4);\n                // eslint-disable-next-line new-cap\n                return new arrayType(heap.buffer, ptr + ofs, bufferWordSize - ofs / 4);\n            };\n            const meshIDs = getView(Uint32Array, Module.HEAPU32, temp.ptr, renderableStructOffsets['mesh']);\n            const lodLevels = getView(Int32Array, Module.HEAP32, temp.ptr, renderableStructOffsets['lodLevel']);\n            const masks = getView(Uint32Array, Module.HEAPU32, temp.ptr, renderableStructOffsets['visibilityMask']);\n            // const transforms = getView(Float32Array, Module.HEAPF32, temp.ofs, offsets['transform'])\n            const scenePointers = getView(Uint32Array, Module.HEAPU32, temp.ptr, renderableStructOffsets['scene']);\n            const count = Module.viewNextRenderables(this.ptr, temp.ptr, batchSize);\n            const output = [];\n            for (let i = 0; i < count; i++) {\n                const id = meshIDs[strideInWords * i];\n                const lod = lodLevels[strideInWords * i];\n                const mask = masks[strideInWords * i];\n                const scenePtr = scenePointers[strideInWords * i];\n                // TODO extract individual transforms too\n                output.push({\n                    id: id,\n                    mesh: this.runtimeAssets.get(id),\n                    lod: lod,\n                    mask: mask,\n                    scenePtr: scenePtr,\n                });\n            }\n            return output;\n        }\n    }\n    class AssetLoad {\n        constructor(ptr, assetUserPointer) {\n            this.ptr = ptr;\n            this.assetType = Module.assetLoadGetType(this.ptr);\n            this.type = ('Load' + AssetType[this.assetType]);\n            this.data = {}; // Type specific asset data set from the outside\n            this.assetUserPointer = assetUserPointer;\n        }\n        prepare() {\n            Module.assetLoadPrepare(this.ptr, this.assetUserPointer);\n        }\n        finish(result) {\n            Module.assetLoadFinish(this.ptr, result);\n        }\n    }\n    class AssetUnload {\n        constructor(ptr) {\n            this.ptr = ptr;\n            this.assetType = Module.assetUnloadGetType(this.ptr);\n            this.type = ('Unload' + AssetType[this.assetType]);\n            this.userPointer = Module.assetUnloadGetUserPointer(this.ptr);\n        }\n        finish() {\n            Module.assetUnloadFinish(this.ptr);\n        }\n    }\n    class Runtime {\n        constructor(client, { features = {\n            textureSupportMask: 0,\n            formats: [],\n            srgb: false,\n            halfFloat: false,\n        }, flags = 0, }, { workerScriptURL, numWorkers = 0 }) {\n            this.assets = new Map();\n            this.nextId = 1;\n            this.tempTextureBuffer = new Buffer(1024 * 1024);\n            this.tempStreamingStateBuffer = new Buffer(Module.streamingStateSize);\n            this.tempDispatchBuffer = new Buffer(1);\n            this.stats = {\n                numUpdates: 0,\n                meshPipelineMemoryUse: 0,\n                texturePipelineMemoryUse: 0,\n                numWorkerLoadsPending: 0,\n                perFrameLoadedTextures: 0,\n                perFrameLoadedTextureBytes: 0,\n                perFrameLoadedMeshes: 0,\n                perFrameLoadedMeshBytes: 0,\n                numInstantUnloads: 0,\n                assetLoadTimes: new Map(),\n            };\n            this.limits = {\n                // A soft upper limit in bytes\n                streamingPipeSizeLimit: 1 << 19,\n                // A maximum of number loads per worker queue\n                maxWorkQueueLength: 10,\n            };\n            this.loadPromises = new Map();\n            /**\n             * If no normal map formats are supported then force support for\n             * BC5 so that textures get transcoded into an uncompressed format.\n             */\n            const normalFormats = TextureSupportFlags.ETC1 |\n                TextureSupportFlags.ASTC |\n                TextureSupportFlags.PVRTC1 |\n                TextureSupportFlags.BC5;\n            let textureSupportMask = features.textureSupportMask;\n            if (!(textureSupportMask & normalFormats)) {\n                textureSupportMask |= TextureSupportFlags.BC5 | TextureSupportFlags.BC4;\n            }\n            this.client = client;\n            const infoPtr = Module.serializeEnvironmentInfo({\n                textureSupportFlags: textureSupportMask,\n                localCacheDirectory: null,\n                localCacheMaximumByteSize: 0,\n            }, 0);\n            this.ptr = Module.runtimeCreate(client.ptr, infoPtr, flags);\n            Module.umbraFree(infoPtr);\n            this.platformFeatures = features;\n            const scratchSize = Math.max(Module.meshInfoSize, Module.materialInfoSize, Module.textureInfoSize, Module.byteBufferSize);\n            this.scratch = new Buffer(scratchSize);\n            this.debug = {\n                textureFormatsInUse: new Set(),\n                platformFeatures: features,\n                trackInstantUnloads: false,\n            };\n            // Pick the number of workers with the same heuristic as the Web Player\n            if (numWorkers == 0) {\n                numWorkers = Math.min(Math.max(1, hardwareConcurrency() - 2), MAX_NUM_WORKERS);\n            }\n            this.workerPool = new WorkerPool(numWorkers, workerScriptURL);\n        }\n        destroy() {\n            this.workerPool.destroy();\n            this.tempTextureBuffer.destroy();\n            this.tempStreamingStateBuffer.destroy();\n            this.tempDispatchBuffer.destroy();\n            this.scratch.destroy();\n            Module.runtimeDestroy(this.ptr);\n            this.client.destroy();\n            this.ptr = 0;\n        }\n        createScenePublic(publicKey) {\n            const scenePtr = Module.sceneCreatePublic(this.ptr, publicKey);\n            if (!scenePtr) {\n                return undefined;\n            }\n            return new NativeScene(scenePtr);\n        }\n        createScene(apiKey, locator) {\n            const scenePtr = Module.sceneCreate(this.ptr, apiKey, locator);\n            if (!scenePtr) {\n                return undefined;\n            }\n            return new NativeScene(scenePtr);\n        }\n        createSceneLocal(url) {\n            const scenePtr = Module.sceneCreateLocal(this.ptr, url);\n            if (!scenePtr) {\n                return undefined;\n            }\n            return new NativeScene(scenePtr);\n        }\n        setHandlers(handlers) {\n            this.handlers = handlers;\n        }\n        createView() {\n            const viewPtr = Module.viewCreate(this.ptr);\n            return new View(viewPtr, this.assets);\n        }\n        update() {\n            Module.runtimeUpdate(this.ptr);\n        }\n        *getAssetUnloads() {\n            let p = Module.runtimeNextAssetUnload(this.ptr);\n            while (p !== 0) {\n                const unload = new AssetUnload(p);\n                unload.data = this.assets.get(unload.userPointer);\n                yield unload;\n                p = Module.runtimeNextAssetUnload(this.ptr);\n            }\n        }\n        async dispatchTextureLoad(load) {\n            const infoPtr = this.scratch.ptr;\n            Module.textureLoadGetInfo(load.ptr, infoPtr);\n            const texture = Module.deserializeTextureInfo(infoPtr);\n            const needsTranscoding = this.formatNeedsTranscoding(texture.format);\n            load.prepare();\n            let textureData;\n            let uncompressedTexturePtr = 0;\n            if (needsTranscoding) {\n                const serSize = Module.textureLoadGetSerializedSize(load.ptr);\n                const headerSize = Module.textureLoadDispatchHeaderSize;\n                const textureLoadDispatchSize = serSize + headerSize;\n                this.tempDispatchBuffer.ensureSize(textureLoadDispatchSize);\n                const dispatchBuffer = this.tempDispatchBuffer;\n                const desc = Module.convertAssetLoadToTextureDispatch(load.ptr, load.assetUserPointer, this.platformFeatures.textureSupportMask, this.platformFeatures.srgb, dispatchBuffer.ptr, textureLoadDispatchSize);\n                if (typeof desc === 'undefined') {\n                    load.finish(AssetLoadResult.Failure);\n                    throw new Error('convertAssetLoadToTextureDispatch failed');\n                }\n                // We can't tell how big the transcoded texture will be but we assume it will be pretty\n                // much the same size as the input. Since both input and output textures can still stay\n                // allocated simultaneously, multiply the size with two two get a peak memory use estimate.\n                const memoryUseEstimate = textureLoadDispatchSize * 2;\n                this.stats.texturePipelineMemoryUse += memoryUseEstimate;\n                const best = this.workerPool.findMostAvailableWorker();\n                let buffer;\n                // Launch the async worker transcode task\n                try {\n                    ;\n                    ({ buffer } = await this.workerPool.callWorker(best, 'loadTexture', new Uint8Array(dispatchBuffer.bytes()), // Copy the dispatch buffer\n                    {\n                        load,\n                        memoryUse: memoryUseEstimate,\n                    }));\n                }\n                catch ({ error }) {\n                    load.finish(AssetLoadResult.Failure);\n                    throw error;\n                }\n                this.stats.texturePipelineMemoryUse -= memoryUseEstimate;\n                this.stats.perFrameLoadedTextures += 1;\n                this.stats.perFrameLoadedTextureBytes += serSize;\n                uncompressedTexturePtr = Module.umbraAlloc(buffer.byteLength);\n                // Int8Array.set(ArrayBuffer, ofs) works but ArrayBuffer is missing .length so we force the type\n                Module.HEAP8.set(buffer, uncompressedTexturePtr);\n                buffer = undefined;\n                const result = Module.deserializeTextureLoadResult(uncompressedTexturePtr);\n                const umbraTexture = result.textureInfo;\n                let datatype = Primitive.Uint8;\n                if (textureFormatToPrimitive.has(umbraTexture.format)) {\n                    datatype = textureFormatToPrimitive.get(umbraTexture.format);\n                }\n                else {\n                    console.warn(`Used default datatype for texture format ${TextureFormat[umbraTexture.format]}`);\n                }\n                const pixelData = new HeapView(uncompressedTexturePtr + Module.textureLoadResultHeaderSize, umbraTexture.dataByteSize, datatype);\n                textureData = { info: umbraTexture, buffer: pixelData };\n            }\n            else {\n                // No transcoding needed\n                const buffer = this.tempTextureBuffer;\n                buffer.ensureSize(texture.dataByteSize);\n                Module.serializeByteBuffer({\n                    ptr: buffer.ptr,\n                    byteSize: texture.dataByteSize,\n                    flags: 0,\n                }, this.scratch.ptr);\n                if (!Module.textureLoadGetData(load.ptr, this.scratch.ptr)) {\n                    load.finish(AssetLoadResult.Failure);\n                    throw new Error(`textureLoadGetData failed: ${load.ptr}, ${buffer.ptr}, ${texture.dataByteSize}/${buffer.size}`);\n                }\n                const bufferView = new HeapView(buffer.ptr, texture.dataByteSize, Primitive.Uint8);\n                textureData = { info: texture, buffer: bufferView };\n            }\n            try {\n                // The handler must copy texture data if it wants to keep it for later.\n                const result = this.handlers['LoadTexture'](textureData, load.assetUserPointer);\n                load.finish(result);\n                if (result === AssetLoadResult.Success) {\n                    this.debug.textureFormatsInUse.add(textureData.info.format);\n                    if (this.debug.trackInstantUnloads) {\n                        this.stats.assetLoadTimes.set(load.assetUserPointer, this.stats.numUpdates);\n                    }\n                }\n                return result;\n            }\n            catch (error) {\n                load.finish(AssetLoadResult.Failure);\n                console.error(error);\n                throw error;\n            }\n            finally {\n                if (uncompressedTexturePtr > 0) {\n                    Module.umbraFree(uncompressedTexturePtr);\n                }\n            }\n        }\n        async dispatchMaterialLoad(load) {\n            load.prepare();\n            Module.materialLoadGetInfo(load.ptr, this.scratch.ptr);\n            const info = Module.deserializeMaterialInfo(this.scratch.ptr);\n            const texturePtrs = info.textures.filter(ptr => ptr !== Module.INVALID_USERPOINTER);\n            // All texture loads have been started by now so the promises should exist.\n            const pending = texturePtrs.map((id) => this.loadPromises.get(id));\n            // Catches errors and saves the texture load statuses to a list. All texture\n            // promises are waited for before we check for errors.\n            const texturePromises = pending.map(p => p.catch(e => e));\n            const resultsAndErrors = await Promise.all(texturePromises);\n            // We waited for every dependency to finish so that we can now safely remove them\n            // from \"pendingAssetLoads\" all at once. This is done even if some of them failed.\n            texturePtrs.forEach(id => this.loadPromises.delete(id));\n            for (const result of resultsAndErrors) {\n                if (result instanceof Error) {\n                    load.finish(AssetLoadResult.Failure);\n                    throw result;\n                }\n            }\n            // Now we know all dependencies resolved so the type can be updated.\n            const results = resultsAndErrors;\n            for (const result of results) {\n                if (result !== AssetLoadResult.Success) {\n                    load.finish(AssetLoadResult.Aborted);\n                    return AssetLoadResult.Aborted;\n                }\n            }\n            // Texture loads were successful so we can fetch the objects uploaded by user.\n            const textureObjects = texturePtrs.map((id) => this.assets.get(id));\n            const materialData = {\n                transparent: info.transparent,\n                textures: textureObjects,\n            };\n            try {\n                const result = this.handlers['LoadMaterial'](materialData, load.assetUserPointer);\n                load.finish(result);\n                return result; // resolves the promise stored in \"pendingAssetLoads[load.assetUserPointer]\"\n            }\n            catch (error) {\n                load.finish(AssetLoadResult.Failure);\n                console.error(error);\n                throw error;\n            }\n        }\n        async dispatchMeshLoad(load) {\n            Module.meshLoadGetInfo(load.ptr, this.scratch.ptr);\n            const info = Module.deserializeMeshInfo(this.scratch.ptr);\n            load.prepare();\n            const serializedSize = Module.meshLoadGetSerializedSize(load.ptr);\n            const dispatchSize = Module.meshLoadDispatchHeaderSize + serializedSize;\n            this.tempDispatchBuffer.ensureSize(dispatchSize);\n            const buf = this.tempDispatchBuffer;\n            if ((buf.ptr & 0x0f) != 0) {\n                console.error(`buf.ptr wasn't aligned: ${buf.ptr}`);\n            }\n            const desc = Module.convertAssetLoadToMeshDispatch(load.ptr, load.assetUserPointer, buf.ptr, dispatchSize);\n            const materialUserPointer = info.material;\n            const materialPromise = this.loadPromises.get(materialUserPointer);\n            if (typeof materialPromise === 'undefined') {\n                load.finish(AssetLoadResult.Failure);\n                throw new Error(`Material UserPointer ${materialUserPointer} didn't have a promise!`);\n            }\n            // Start async mesh decompression before waiting for \"materialPromise\" to finish.\n            // This way both texture transcoding and mesh decompression can run in parallel.\n            // Increase tracked memory use here and decrease it in the finish callback.\n            const memoryUse = dispatchSize + desc.byteSize + Module.meshLoadResultHeaderSize;\n            this.stats.meshPipelineMemoryUse += memoryUse;\n            const workerId = this.workerPool.findMostAvailableWorker();\n            let buffer;\n            try {\n                // NOTE: We need to copy \"buf\" here because if \"callWorker()\" transfers the ownership\n                // its a must, and even if it doesn't, then it's much faster to transfer a small copy\n                // because otherwise the _whole heap_ would get copied over to a worker.\n                // See https://bugs.chromium.org/p/chromium/issues/detail?id=169705\n                ;\n                ({ buffer } = await this.workerPool.callWorker(workerId, 'loadMesh', new Uint8Array(buf.bytes()), {}));\n            }\n            catch ({ error }) {\n                load.finish(Assets.AssetLoadResult.Failure);\n                throw error;\n            }\n            finally {\n                this.stats.meshPipelineMemoryUse -= memoryUse;\n                this.stats.perFrameLoadedMeshes += 1;\n                this.stats.perFrameLoadedMeshBytes += serializedSize;\n            }\n            const bufferByteSize = buffer.length * buffer.BYTES_PER_ELEMENT;\n            const ptr = Module.umbraAlloc(bufferByteSize);\n            Module.HEAP8.set(buffer, ptr);\n            buffer = undefined; // we don't use \"buffer\" after we've copied it to the heap\n            const obj = Module.deserializeMeshLoadResult(ptr);\n            let failed = false;\n            let failureMessage;\n            // These errors should never happen\n            if (obj.result !== Assets.AssetLoadResult.Success) {\n                failureMessage = `Asset load failed with ${Assets.AssetLoadResult[obj.result]}`;\n                failed = true;\n            }\n            if (obj.assetLoad !== load.ptr) {\n                failureMessage = `Asset load ptr didn't match ${obj.assetLoad} vs ${load.ptr}`;\n                failed = true;\n            }\n            if (failed) {\n                Module.umbraFree(ptr);\n                load.finish(Assets.AssetLoadResult.Failure);\n                throw Error(failureMessage);\n            }\n            const basePtr = ptr + Module.meshLoadResultHeaderSize;\n            const bufferDescs = Module.meshLoadResultBuildUmbraBuffers(ptr, basePtr);\n            const attributeArrayType = {\n                position: Primitive.Float32,\n                uv: Primitive.Float32,\n                normal: Primitive.Float32,\n                tangent: Primitive.Float32,\n                index: bufferDescs.index.elementByteSize === 2 ? Primitive.Uint16 : Primitive.Uint32,\n            };\n            const meshAttributes = {};\n            for (const name of Object.keys(bufferDescs)) {\n                const vbuf = {};\n                const elemBuf = bufferDescs[name];\n                const attributeArraySize = elemBuf.elementCapacity * elemBuf.elementStride;\n                vbuf['data'] = new HeapView(elemBuf.ptr, attributeArraySize, attributeArrayType[name]);\n                vbuf['desc'] = elemBuf;\n                meshAttributes[name] = vbuf;\n            }\n            // Wait for material load to finish (its textures may take time) and\n            // only then call the handler.\n            let result = AssetLoadResult.Failure;\n            try {\n                result = await materialPromise;\n            }\n            catch (error) {\n                load.finish(AssetLoadResult.Aborted);\n                Module.umbraFree(ptr);\n                throw error;\n            }\n            // Material load failing is normal (e.g. when out of VRAM) so we don't throw any errors\n            // when it happens, we just abort this mesh since it obviously can't be used.\n            if (result !== AssetLoadResult.Success) {\n                load.finish(AssetLoadResult.Aborted);\n                Module.umbraFree(ptr);\n                return AssetLoadResult.Aborted;\n            }\n            const materialAsset = this.assets.get(materialUserPointer);\n            if (typeof materialAsset === 'undefined') {\n                load.finish(AssetLoadResult.Aborted);\n                Module.umbraFree(ptr);\n                throw new Error(`Material ${materialUserPointer} had no asset object.`);\n            }\n            const meshData = {\n                buffers: meshAttributes,\n                material: materialAsset,\n                bounds: [info.bounds.mn, info.bounds.mx],\n            };\n            let status = AssetLoadResult.Failure;\n            try {\n                status = this.handlers['LoadMesh'](meshData, load.assetUserPointer);\n                if (status === AssetLoadResult.Success) {\n                    Module.meshLoadFinishExternalWithLoadResultHeader(load.ptr, ptr, basePtr);\n                }\n                else {\n                    load.finish(status);\n                    return status;\n                }\n            }\n            catch (error) {\n                // Handler threw an exception\n                load.finish(Assets.AssetLoadResult.Failure);\n                throw error;\n            }\n            finally {\n                Module.umbraFree(ptr);\n            }\n            return status;\n        }\n        loadAssets(timeLimit) {\n            const startTime = performance.now();\n            // First go and free up all pending assets\n            for (const unload of this.getAssetUnloads()) {\n                if (this.debug.trackInstantUnloads) {\n                    const created = this.stats.assetLoadTimes.get(unload.userPointer);\n                    const wasAlive = this.stats.numUpdates - created;\n                    if (wasAlive < 3) {\n                        this.stats.numInstantUnloads += 1;\n                    }\n                }\n                // Find the user-supplied asset object\n                const asset = this.assets.get(unload.userPointer);\n                // Delete the promise used to wait for this asset. We can't delete the promise earlier\n                // because multiple meshes may need to wait on a single material, so we must keep its promise alive.\n                this.loadPromises.delete(unload.userPointer);\n                // Call the application handler\n                this.handlers[unload.type](asset, unload.userPointer);\n                unload.finish();\n                if (performance.now() - startTime > timeLimit) {\n                    break;\n                }\n            }\n            // Process load jobs if there's still time left\n            let jobsLaunched = 0;\n            do {\n                const loadPtr = Module.runtimeNextAssetLoad(this.ptr);\n                // No more jobs to process?\n                if (loadPtr === 0) {\n                    break;\n                }\n                let promise;\n                // Assign the newly created AssetLoad its own user pointer right away\n                // so that we can call load.prepare() before handing it out to user.\n                const load = new AssetLoad(loadPtr, this.getNextUserPointer());\n                if (load.type === 'LoadTexture') {\n                    promise = this.dispatchTextureLoad(load);\n                }\n                else if (load.type === 'LoadMaterial') {\n                    promise = this.dispatchMaterialLoad(load);\n                }\n                else if (load.type === 'LoadMesh') {\n                    // No-one waits for mesh loads to finish so we don't save its promise\n                    this.dispatchMeshLoad(load);\n                }\n                if (typeof promise !== 'undefined') {\n                    this.loadPromises.set(load.assetUserPointer, promise);\n                }\n                jobsLaunched++;\n                // If every worker is busy then don't exceed the pipeline memory limit.\n                // This causes a bubble in the pipeline if a very large decompression\n                // job consumes all the pipeline memory. On the other hand, this shouldn't\n                // happen as we crash if too much memory is used anyway.\n                const pipelineMemoryUsed = this.stats.meshPipelineMemoryUse + this.stats.texturePipelineMemoryUse;\n                const shortest = this.workerPool.shortestQueueLength();\n                if (shortest > 0 && pipelineMemoryUsed >= this.limits.streamingPipeSizeLimit) {\n                    break;\n                }\n                // Don't queue any new loads if the workers are falling behind. If an async load\n                // is finished too late, it may be get instantly unloaded anyway if the camera moved.\n                if (shortest >= this.limits.maxWorkQueueLength) {\n                    break;\n                }\n            } while (performance.now() - startTime < timeLimit);\n            this.stats.numUpdates += 1;\n            this.stats.numWorkerLoadsPending = this.workerPool.numLoadsPending();\n            this.stats.perFrameLoadedTextures = 0;\n            this.stats.perFrameLoadedTextureBytes = 0;\n            this.stats.perFrameLoadedMeshes = 0;\n            this.stats.perFrameLoadedMeshBytes = 0;\n        }\n        getNextUserPointer() {\n            // AssetJob IDs are just an increasing 32-bit series\n            const userPtr = this.nextId;\n            this.nextId = (this.nextId + 1) | 0;\n            if (this.nextId === 0) {\n                this.nextId = 1;\n            }\n            return userPtr;\n        }\n        addAsset(assetID, asset) {\n            this.assets.set(assetID, asset);\n        }\n        /**\n         * Removes the asset reference of the stream out job.\n         * Assumes the caller has already freed their own asset resources.\n         */\n        removeAsset(id) {\n            if (this.assets.has(id)) {\n                this.assets.delete(id);\n            }\n        }\n        formatNeedsTranscoding(format) {\n            const flags = this.platformFeatures.textureSupportMask;\n            switch (format) {\n                case TextureFormat.BC1:\n                    if (flags & TextureSupportFlags.BC1) {\n                        return false;\n                    }\n                    break;\n                case TextureFormat.BC3:\n                    if (flags & TextureSupportFlags.BC3) {\n                        return false;\n                    }\n                    break;\n                case TextureFormat.BC4:\n                    if (flags & TextureSupportFlags.BC4) {\n                        return false;\n                    }\n                    break;\n                case TextureFormat.BC5:\n                    if (flags & TextureSupportFlags.BC5) {\n                        return false;\n                    }\n                    break;\n                default:\n                    return false;\n            }\n            return true;\n        }\n        getStreamingState() {\n            Module.runtimeGetStreamingState(this.ptr, this.tempStreamingStateBuffer.ptr);\n            return Module.deserializeStreamingState(this.tempStreamingStateBuffer.ptr);\n        }\n        getStreamingProgress() {\n            const state = this.getStreamingState();\n            if (state.numResidentTiles == 0) {\n                return 0.0;\n            }\n            return state.numResidentTilesLoaded / state.numResidentTiles;\n        }\n        getNumberOfWorkers() {\n            return this.workerPool.numWorkers();\n        }\n    }\n    // Expose only runtime for instantiation\n    return {\n        createRuntime: (config) => new Runtime(new Client(), config, Module.umbraLibraryConfig),\n    };\n};\nexport { create };\n//# sourceMappingURL=wrappers.js.map","import UmbraNativeAPI from './native.js';\nimport * as Native from './NativeTypes';\nimport * as wrappers from './wrappers';\nimport { TextureSupportFlags } from './NativeTypes';\nimport { wrapNativeFunctions } from './NativeFunctions';\nimport './Mesh';\nimport { LibraryInfo } from './NativeEnums.js';\nlet umbrajsScriptDir = '';\nif (typeof document !== 'undefined' && document.currentScript) {\n    const dir = document.currentScript.src;\n    if (dir !== 'undefined') {\n        umbrajsScriptDir = dir.substr(0, dir.lastIndexOf('/') + 1);\n    }\n}\n/**\n * Returns a library instance that uses the Emscripten resources of \"Module\".\n */\nfunction instantiate(Module, config) {\n    const lib = {};\n    /**\n     * Queries supported texture formats and also enables the relevant WebGL extensions.\n     */\n    lib.getPlatformFeatures = (gl) => {\n        let flags = 0; // We accumulate a texture format bitmask here\n        const formats = new Set(); // Will hold all supported format names\n        let supportsSRGB = false;\n        let supportsHalfFloat = false;\n        /**\n         * We fetch all extension strings and strip off possible vendor prefixes of WEBGL\n         * extensions. However, when we enable the extension we need the original full string.\n         * Here 'extStrings' holds a mapping from a shortened to a full extension string.\n         */\n        const extStrings = new Map([]); // Full strings\n        const extNames = []; // Shortened strings\n        const allExtensions = gl.getSupportedExtensions();\n        for (const full of allExtensions) {\n            const shortened = full.replace(/^(.*)_WEBGL_/, 'WEBGL_');\n            extStrings.set(shortened, full);\n            extNames.push(shortened);\n        }\n        const mapping = new Map([\n            [\n                'WEBGL_compressed_texture_s3tc',\n                {\n                    mask: TextureSupportFlags.BC1 | TextureSupportFlags.BC2 | TextureSupportFlags.BC3,\n                    names: ['bc1', 'bc2', 'bc3'],\n                },\n            ],\n            [\n                'WEBGL_compressed_texture_s3tc_srgb',\n                {\n                    mask: TextureSupportFlags.BC1 | TextureSupportFlags.BC2 | TextureSupportFlags.BC3,\n                    names: ['bc1', 'bc2', 'bc3'],\n                },\n            ],\n            [\n                'WEBGL_compressed_texture_rgtc',\n                {\n                    mask: TextureSupportFlags.BC4 | TextureSupportFlags.BC5,\n                    names: ['bc4', 'bc5'],\n                },\n            ],\n            [\n                'WEBGL_compressed_texture_pvrtc',\n                {\n                    mask: TextureSupportFlags.PVRTC1,\n                    names: ['pvrtc1_rgb4', 'pvrtc1_rgba4'],\n                },\n            ],\n            [\n                'WEBGL_compressed_texture_etc1',\n                {\n                    mask: TextureSupportFlags.ETC1,\n                    names: ['etc1_rgb'],\n                },\n            ],\n            [\n                'WEBGL_compressed_texture_astc',\n                {\n                    mask: TextureSupportFlags.ASTC,\n                    names: ['astc_4x4'],\n                },\n            ],\n        ]);\n        for (const key of mapping.keys()) {\n            if (extNames.includes(key)) {\n                gl.getExtension(extStrings.get(key));\n                const value = mapping.get(key);\n                flags |= value.mask;\n                value.names.forEach(name => formats.add(name));\n            }\n        }\n        if (extNames.includes('WEBGL_compressed_texture_s3tc_srgb')) {\n            supportsSRGB = true;\n        }\n        if (extNames.includes('EXT_sRGB')) {\n            gl.getExtension(extStrings.get('EXT_sRGB'));\n            supportsSRGB = true;\n        }\n        if (extNames.includes('OES_texture_half_float')) {\n            gl.getExtension(extStrings.get('OES_texture_half_float'));\n            supportsHalfFloat = true;\n        }\n        return {\n            textureSupportMask: flags,\n            formats: [...formats],\n            srgb: supportsSRGB,\n            halfFloat: supportsHalfFloat,\n        };\n    };\n    // Access to the Emscripten module is needed for deinitialization\n    lib.nativeModule = Module;\n    lib.nativeModule['umbraLibraryConfig'] = config;\n    // Allow access to Runtime class\n    lib.createRuntime = wrappers.create(Module).createRuntime;\n    lib.getStreamingInfo = () => {\n        return {\n            minBytesDownloaded: lib.nativeModule.minBytesDownloaded,\n            maxBytesDownloaded: lib.nativeModule.maxBytesDownloaded,\n        };\n    };\n    lib.getLibraryInfo = () => {\n        return {\n            version: Module.getLibraryInfo(Native.LibraryInfo.Version),\n            copyright: Module.getLibraryInfo(Native.LibraryInfo.Copyright),\n            buildTime: Module.getLibraryInfo(Native.LibraryInfo.BuildTime),\n            buildID: Module.getLibraryInfo(Native.LibraryInfo.BuildId),\n        };\n    };\n    lib.abortDownloads = () => {\n        Object.values(Module.wgetRequests).forEach((req) => {\n            req.abort();\n        });\n    };\n    return lib;\n}\n/**\n * Compiles the WebAssembly and code and initializes the Emscripten environment.\n * Returns a Promise that resolves with the library instance ready for use.\n */\nexport const initUmbra = function (config) {\n    const defaults = {\n        wasmURL: umbrajsScriptDir + 'umbra.wasm',\n        workerScriptURL: umbrajsScriptDir + 'UmbraAssetWorker.js',\n    };\n    config = Object.assign(defaults, config);\n    return new Promise((resolve, reject) => {\n        try {\n            const redirectWasmURL = (path, prefix) => {\n                // The main WASM file's URL must be changed here because it's loaded during startup\n                // using Emscripten's \"locateFile()\" API using a hardcoded 'umbra.wasm' path.\n                if (path.endsWith('umbra.wasm')) {\n                    return config.wasmURL;\n                }\n                return prefix + path;\n            };\n            UmbraNativeAPI({ locateFile: redirectWasmURL }).then(Module => {\n                // A workaround for https://github.com/emscripten-core/emscripten/issues/5820\n                delete Module['then'];\n                Module['onAbort'] = what => {\n                    reject(what);\n                };\n                wrapNativeFunctions(Module);\n                resolve(instantiate(Module, config));\n            });\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n};\n/**\n * Deinitializes the Emscripten environment.\n *\n * NOTE: We assume here that async IndexedDB loads and stores have already finished.\n * This is the case if Umbra.update() was *not* called before deinitUmbra() on the\n * same frame.\n */\nexport const deinitUmbra = function (Umbra) {\n    // Pending requests must be aborted so that native handlers won't get called\n    Umbra.abortDownloads();\n    const privateUmbra = Umbra;\n    // Emscripten's exit(0) call throws an ExitStatus exception\n    try {\n        privateUmbra.nativeModule._exit(0);\n    }\n    catch (e) {\n        if (e.name !== 'ExitStatus') {\n            throw e;\n        }\n    }\n};\nexport { LibraryInfo };\nexport * from './PublicAPI';\n//# sourceMappingURL=index.js.map","// Generated at 2020-11-13 15:44:29\nexport function wrapNativeFunctions(Module) {\n    Object.assign(Module, {\n        configInit: Module.cwrap('UmbraConfigInit', null, ['number']),\n        clientCreate: Module.cwrap('UmbraClientCreate', 'number', ['string', 'number']),\n        clientDestroy: Module.cwrap('UmbraClientDestroy', null, ['number']),\n        getLibraryInfo: Module.cwrap('UmbraGetLibraryInfo', 'string', ['number']),\n        environmentInfoDefaults: Module.cwrap('UmbraEnvironmentInfoDefaults', null, ['number']),\n        runtimeCreate: Module.cwrap('UmbraRuntimeCreate', 'number', ['number', 'number', 'number']),\n        runtimeUpdate: Module.cwrap('UmbraRuntimeUpdate', null, ['number']),\n        runtimeGetStreamingState: Module.cwrap('UmbraRuntimeGetStreamingState', null, ['number', 'number']),\n        runtimeDestroy: Module.cwrap('UmbraRuntimeDestroy', null, ['number']),\n        sceneCreate: Module.cwrap('UmbraSceneCreate', 'number', ['number', 'string', 'string']),\n        sceneCreatePublic: Module.cwrap('UmbraSceneCreatePublic', 'number', ['number', 'string']),\n        sceneCreateLocal: Module.cwrap('UmbraSceneCreateLocal', 'number', ['number', 'string']),\n        sceneGetConnectionStatus: Module.cwrap('UmbraSceneGetConnectionStatus', 'number', ['number']),\n        sceneGetInfo: Module.cwrap('UmbraSceneGetInfo', 'number', ['number', 'number']),\n        sceneSetTransform: Module.cwrap('UmbraSceneSetTransform', null, ['number', 'number']),\n        sceneDestroy: Module.cwrap('UmbraSceneDestroy', null, ['number']),\n        viewCreate: Module.cwrap('UmbraViewCreate', 'number', ['number']),\n        viewUpdateRendering: Module.cwrap('UmbraViewUpdateRendering', null, ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number']),\n        viewUpdateFilter: Module.cwrap('UmbraViewUpdateFilter', null, ['number', 'number']),\n        viewGetCompleted: Module.cwrap('UmbraViewGetCompleted', 'number', ['number']),\n        viewNextRenderables: Module.cwrap('UmbraViewNextRenderables', 'number', ['number', 'number', 'number']),\n        viewResetRenderables: Module.cwrap('UmbraViewResetRenderables', null, ['number']),\n        viewDestroy: Module.cwrap('UmbraViewDestroy', null, ['number']),\n        viewRayQuery: Module.cwrap('UmbraViewRayQuery', 'number', ['number', 'number', 'number', 'number', 'number', 'number']),\n        sceneCopyCreate: Module.cwrap('UmbraSceneCopyCreate', 'number', ['number', 'number', 'number', 'number', 'number']),\n        sceneCopyGetStatus: Module.cwrap('UmbraSceneCopyGetStatus', 'number', ['number', 'number']),\n        sceneCopyGetError: Module.cwrap('UmbraSceneCopyGetError', 'string', ['number']),\n        sceneCopyDestroy: Module.cwrap('UmbraSceneCopyDestroy', null, ['number']),\n        vertexAttributeGetElementByteSize: Module.cwrap('UmbraVertexAttributeGetElementByteSize', 'number', ['number']),\n        runtimeNextAssetLoad: Module.cwrap('UmbraRuntimeNextAssetLoad', 'number', ['number']),\n        assetLoadGetType: Module.cwrap('UmbraAssetLoadGetType', 'number', ['number']),\n        assetLoadPrepare: Module.cwrap('UmbraAssetLoadPrepare', null, ['number', 'number']),\n        assetLoadAbortRequested: Module.cwrap('UmbraAssetLoadAbortRequested', 'number', ['number']),\n        assetLoadFinish: Module.cwrap('UmbraAssetLoadFinish', null, ['number', 'number']),\n        meshLoadFinishExternal: Module.cwrap('UmbraMeshLoadFinishExternal', null, ['number', 'number', 'number', 'number']),\n        meshLoadGetInfo: Module.cwrap('UmbraMeshLoadGetInfo', null, ['number', 'number']),\n        meshLoadGetData: Module.cwrap('UmbraMeshLoadGetData', 'number', ['number', 'number', 'number']),\n        meshStreamSetBuffers: Module.cwrap('UmbraMeshStreamSetBuffers', 'number', ['number', 'number', 'number']),\n        meshStreamNext: Module.cwrap('UmbraMeshStreamNext', 'number', ['number', 'number', 'number']),\n        meshStreamDone: Module.cwrap('UmbraMeshStreamDone', 'number', ['number']),\n        meshLoadGetSerializedSize: Module.cwrap('UmbraMeshLoadGetSerializedSize', 'number', ['number']),\n        textureGetMipmapLevelByteSize: Module.cwrap('UmbraTextureGetMipmapLevelByteSize', 'number', ['number', 'number']),\n        textureGetMipmapLevelOffset: Module.cwrap('UmbraTextureGetMipmapLevelOffset', 'number', ['number', 'number']),\n        textureLoadGetInfo: Module.cwrap('UmbraTextureLoadGetInfo', null, ['number', 'number']),\n        textureLoadGetData: Module.cwrap('UmbraTextureLoadGetData', 'number', ['number', 'number']),\n        textureLoadGetSerializedSize: Module.cwrap('UmbraTextureLoadGetSerializedSize', 'number', ['number']),\n        textureMetaDataLoadGetData: Module.cwrap('UmbraTextureMetaDataLoadGetData', 'number', ['number', 'number']),\n        textureMetaDataGetClassificationCount: Module.cwrap('UmbraTextureMetaDataGetClassificationCount', 'number', ['number', 'number']),\n        textureMetaDataGetClassification: Module.cwrap('UmbraTextureMetaDataGetClassification', 'number', ['number', 'number', 'number']),\n        textureMetaDataGetClassificationAmount: Module.cwrap('UmbraTextureMetaDataGetClassificationAmount', 'number', ['number', 'number', 'number']),\n        materialLoadGetInfo: Module.cwrap('UmbraMaterialLoadGetInfo', null, ['number', 'number']),\n        runtimeNextAssetUnload: Module.cwrap('UmbraRuntimeNextAssetUnload', 'number', ['number']),\n        assetUnloadGetType: Module.cwrap('UmbraAssetUnloadGetType', 'number', ['number']),\n        assetUnloadGetUserPointer: Module.cwrap('UmbraAssetUnloadGetUserPointer', 'number', ['number']),\n        assetUnloadFinish: Module.cwrap('UmbraAssetUnloadFinish', null, ['number']),\n        sendInternalMessage: Module.cwrap('UmbraSendInternalMessage', 'number', ['number', 'number']),\n    });\n}\n//# sourceMappingURL=NativeFunctions.js.map","/* eslint  @typescript-eslint/camelcase: 0 */\n\nimport * as THREE from './ThreeWrapper'\nimport { TextureFormat } from '@umbra3d/umbrajs'\n\nfunction makeFormat(format, type, compressed) {\n  return { format, type, compressed }\n}\n\n// prettier-ignore\nconst ThreeFormats = {\n  [TextureFormat.RGB24]: makeFormat(THREE.RGBFormat, THREE.UnsignedByteType, false),\n  [TextureFormat.RGBA32]: makeFormat(THREE.RGBAFormat, THREE.UnsignedByteType, false),\n  [TextureFormat.RGB565]: makeFormat(THREE.RGBFormat, THREE.UnsignedShort565Type, false),\n  [TextureFormat.RG8]: makeFormat(THREE.LuminanceAlphaFormat, THREE.UnsignedByteType, false),\n  [TextureFormat.RG16F]: makeFormat(THREE.LuminanceAlphaFormat, THREE.HalfFloatType, false),\n  [TextureFormat.BC1]: makeFormat(THREE.RGBA_S3TC_DXT1_Format, THREE.UnsignedByteType, true),\n  [TextureFormat.BC3]: makeFormat(THREE.RGBA_S3TC_DXT5_Format, THREE.UnsignedByteType, true),\n  [TextureFormat.ETC1_RGB]: makeFormat(THREE.RGB_ETC1_Format, THREE.UnsignedByteType, true),\n  [TextureFormat.ASTC_4X4]: makeFormat(THREE.RGBA_ASTC_4x4_Format, THREE.UnsignedByteType, true),\n  [TextureFormat.PVRTC1_RGB4]: makeFormat(THREE.RGB_PVRTC_4BPPV1_Format, THREE.UnsignedByteType, true),\n}\n\nexport { ThreeFormats }\n","const normalmapChunk = `\n#ifdef USE_NORMALMAP\n#ifdef USE_TANGENT\n\nvec3 tangentToWorld2 = normal;\nvec3 tangentToWorld0 = normalize(tangent - tangentToWorld2 * dot(tangentToWorld2, tangent));\n\n#ifdef UMBRA_FLIP_TANGENT\nvec3 tangentToWorld1 = normalize(cross(tangentToWorld0, tangentToWorld2));\n#else\nvec3 tangentToWorld1 = normalize(cross(tangentToWorld2, tangentToWorld0));\n#endif\n\n#if defined(UMBRA_TEXTURE_SUPPORT_BC5) || defined(UMBRA_TEXTURE_SUPPORT_ASTC)\nnormal.xy = texture2D(normalMap, vUv).xy * 2.0 - 1.0;\nnormal.z = sqrt(1.0 - clamp(dot(normal.xy, normal.xy), 0.0, 1.0));\n#elif defined(UMBRA_TEXTURE_SUPPORT_BC3)\nnormal.xy = texture2D(normalMap, vUv).yw * 2.0 - 1.0;\nnormal.z = sqrt(1.0 - clamp(dot(normal.xy, normal.xy), 0.0, 1.0));\n#else\nnormal.xyz = texture2D(normalMap, vUv).xyz;\nnormal.xy *= 2.0;\nnormal.xy -= 1.0;\nnormal = normalize(normal);\n#endif\n\nnormal = tangentToWorld0 * normal.x + tangentToWorld1 * normal.y + tangentToWorld2 * normal.z;\nnormal = normalize(normal);\n#endif\n#endif\n\n`\n\nconst metalnessMapChunk = `\nfloat metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\nvec4 texelMetalness = texture2D( metalnessMap, vUv );\nmetalnessFactor *= texelMetalness.r;\n#endif\n`\n\n// The BSDF function (see 'bsdfs.glsl') squares the roughness so we don't need to do it here.\nconst roughnessMapChunk = `\nfloat roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\nvec4 texelRoughness = texture2D( roughnessMap, vUv );\nfloat roughness = 1.0 - texelRoughness.g;\nroughnessFactor *= roughness;\n#endif\n`\n\n/**\n * ShaderPatcher is a preprocessor class that replaces the default PBR texture read\n * shader chunks with the correct Umbra versions. Doing it this way instead of completely\n * custom shaders allows the application to use its own materials with Umbra scenes.\n */\nclass ShaderPatcher {\n  flipTangent: boolean\n  defines: string\n\n  constructor(formats: string[]) {\n    /*\n     * World space transform can swap handedness which isn't handled by three.js in tangent space\n     * normal maps so we need to be able to flip them ourselves.\n     */\n    this.flipTangent = false\n\n    // Texture format feature flags\n    this.defines = ''\n\n    if (formats.indexOf('bc3') > -1) {\n      this.defines += '#define UMBRA_TEXTURE_SUPPORT_BC3\\n'\n    }\n    if (formats.indexOf('bc5') > -1) {\n      this.defines += '#define UMBRA_TEXTURE_SUPPORT_BC5\\n'\n    }\n    if (formats.indexOf('astc_4x4') > -1) {\n      this.defines += '#define UMBRA_TEXTURE_SUPPORT_ASTC\\n'\n    }\n  }\n\n  process(shader: THREE.Shader, renderer: THREE.WebGLRenderer) {\n    let frag = shader.fragmentShader\n\n    if (this.flipTangent) {\n      frag = '#define UMBRA_FLIP_TANGENT\\n' + frag\n    }\n\n    frag = this.defines + frag\n    frag = frag.replace('#include <normal_fragment_maps>', normalmapChunk)\n    frag = frag.replace('#include <metalnessmap_fragment>', metalnessMapChunk)\n    frag = frag.replace('#include <roughnessmap_fragment>', roughnessMapChunk)\n\n    shader.fragmentShader = frag\n  }\n}\n\nexport { ShaderPatcher }\n","export class ObjectPool<T> {\n  usedList: Array<T> = []\n  freeList: Array<T> = []\n\n  // Tries to find an object matching \"predicate\", if any given.\n  // Constructs a new object with \"makeFunc\" if none were found.\n  allocate(makeFunc: () => T, predicate?: (x: T) => boolean) {\n    let obj: T\n\n    if (this.freeList.length > 0) {\n      // If no predicate given we always take the last one\n      if (typeof predicate === 'undefined') {\n        obj = this.freeList.pop()\n      } else {\n        for (let i = 0; i < this.freeList.length; i++) {\n          const elem: T = this.freeList[i]\n          if (predicate(elem)) {\n            obj = elem\n            this.freeList.splice(i, 1)\n            break\n          }\n        }\n      }\n    }\n\n    if (!obj) {\n      obj = makeFunc()\n    }\n\n    this.usedList.push(obj)\n    return obj\n  }\n\n  freeAll(clearFunc?: (obj: T) => void) {\n    for (let i = 0; i < this.usedList.length; i++) {\n      if (clearFunc) {\n        clearFunc(this.usedList[i])\n      }\n      this.freeList.push(this.usedList[i])\n    }\n    this.usedList.length = 0\n  }\n\n  clear() {\n    this.usedList.length = 0\n    this.freeList.length = 0\n  }\n}\n","import * as THREE from './ThreeWrapper'\n\nimport {\n  TextureType,\n  PlatformFeatures,\n  Runtime,\n  NativeScene,\n  View,\n  Renderable,\n  ConnectionStatus,\n} from '@umbra3d/umbrajs'\nimport { SharedFrameState } from './SharedFrameState'\nimport { ShaderPatcher } from './ShaderPatcher'\nimport { ObjectPool } from './ObjectPool'\n\nexport interface SceneFactory {\n  createScene(apiKey: string, locator: string): UmbraScene\n  createScenePublic(link: string): UmbraScene\n  createSceneLocal(url: string): UmbraScene\n  createSceneWithURL(url: string): UmbraScene\n}\n\ntype UmbraMesh = THREE.Mesh & { isUmbraMesh: true }\n\ninterface SceneStatus {\n  connected: boolean\n  sceneInfo?\n  numVisible: number\n  numShadowCasters: number\n  numCachedMaterials: number\n  numAssets: number\n}\n\n/**\n * A wrapper type for mesh geometry and its material. Only UmbraScene instantiates the\n * THREE.Mesh objects that are passed to the renderer. UmbraScene also creates the final\n * THREE.Material instance using the textures and transparency flag in 'materialDesc'\n */\nexport interface MeshDescriptor {\n  geometry\n  materialDesc\n}\n\ntype DisposeCallback = (m: UmbraScene) => void\n\nexport class UmbraScene extends THREE.Object3D {\n  // User editable config\n  material: THREE.Material = new THREE.MeshBasicMaterial()\n  wireframe = false\n  freeze = false\n\n  // Event callbacks\n  onConnected: () => void\n  onConnectionError: (error: string) => void\n  onDisconnected: () => void\n  onConnectionChanged: (connected: ConnectionStatus) => void\n  onMeshChanged: () => void\n\n  // We need to present ourselves as a LOD object to get the update() call\n  readonly isLOD = true\n  readonly autoUpdate = true\n  readonly name = 'UmbraScene'\n\n  set quality(value: number) {\n    console.error(`UmbraScene.quality is not supported any more. Use camera.umbraQuality instead.`)\n  }\n\n  private renderer: THREE.WebGLRenderer\n\n  private materialPool = new ObjectPool<THREE.Material>()\n  private shaderPatcher: ShaderPatcher\n  private sharedState: SharedFrameState\n\n  private stats = {\n    numVisible: 0,\n    numShadowCasters: 0,\n    numCachedMaterials: 0,\n    numAssets: 0,\n  }\n\n  private diagnostics = {\n    missingNormals: {\n      checked: false,\n      message: 'UmbraScene has no normals so it will appear black.',\n    },\n    deprecatedMaterial: {\n      checked: false,\n      message:\n        'Property umbraScene.opaqueMaterial has been deprecated. Use umbraScene.material instead.',\n    },\n    report: (field: string) => {\n      if (!this.diagnostics[field].checked) {\n        this.diagnostics[field].checked = true\n        console.warn(this.diagnostics[field].message)\n      }\n    },\n  }\n\n  private umbra: {\n    runtime: NonNullable<Runtime>\n    nativeScene: NonNullable<NativeScene>\n  }\n\n  private onDispose: DisposeCallback\n\n  // We need to keep track of changes to emit events\n  private oldState = {\n    status: undefined,\n    visibleIDs: new Set<number>(),\n  }\n\n  // UmbraScene should be instantiated using Umbra.createScene()\n  constructor(\n    runtime: Runtime,\n    scene: NativeScene,\n    sharedState: SharedFrameState,\n    renderer: THREE.WebGLRenderer,\n    features: PlatformFeatures,\n    onDispose: DisposeCallback = undefined,\n  ) {\n    super()\n\n    this.renderer = renderer\n    this.sharedState = sharedState\n    this.shaderPatcher = new ShaderPatcher(features.formats)\n    this.onDispose = onDispose\n\n    // We need to flip the Z-axis since scenes are stored in \"left-handed Y is up\" coordinate system\n    this.scale.set(1.0, 1.0, -1.0)\n\n    // Add API objects under their own object for clarity\n    this.umbra = {\n      runtime: runtime,\n      nativeScene: scene,\n    }\n  }\n\n  get opaqueMaterial() {\n    this.diagnostics.report('deprecatedMaterial')\n    return this.material\n  }\n\n  set opaqueMaterial(mat) {\n    this.diagnostics.report('deprecatedMaterial')\n    this.material = mat\n  }\n\n  getInfo(): SceneStatus {\n    const info = { connected: this.umbra.nativeScene.isConnected() }\n    if (info.connected) {\n      info['sceneInfo'] = this.umbra.nativeScene.getInfo()\n    }\n    Object.assign(info, this.stats)\n    return info as SceneStatus\n  }\n\n  getBounds(): THREE.Box3 {\n    if (!this.umbra.nativeScene.isConnected()) {\n      return undefined\n    }\n\n    const info = this.umbra.nativeScene.getInfo()\n    const bounds = info.bounds\n    const min = bounds.mn\n    const max = bounds.mx\n    const box = new THREE.Box3(\n      new THREE.Vector3(min[0], min[1], min[2]),\n      new THREE.Vector3(max[0], max[1], max[2]),\n    )\n    return box\n  }\n\n  getCenter(): THREE.Vector3 {\n    const bounds = this.getBounds()\n    bounds.applyMatrix4(this.matrixWorld)\n    const center = new THREE.Vector3()\n    bounds.getCenter(center)\n    return center\n  }\n\n  private updateStreamingEvents(visibleIDs: Set<number>) {\n    const then = this.oldState.visibleIDs\n    const now = visibleIDs\n\n    if (this.onMeshChanged) {\n      if (then.size !== now.size) {\n        this.onMeshChanged()\n      } else {\n        for (const id of now) {\n          if (!then.has(id)) {\n            this.onMeshChanged()\n            break\n          }\n        }\n      }\n    }\n\n    this.oldState.visibleIDs = visibleIDs\n  }\n\n  // This gets called by ThreejsIntegration's periodic update handler\n  private updateNetworkEvents() {\n    const status = this.umbra.nativeScene.connectionStatus()\n\n    if (this.oldState.status !== status) {\n      if (this.onConnectionChanged) {\n        this.onConnectionChanged(status)\n      }\n\n      switch (status) {\n        case ConnectionStatus.ConnectionError:\n          if (this.onConnectionError) {\n            this.onConnectionError('Could not connect')\n          }\n          break\n        case ConnectionStatus.Connected:\n          if (this.onConnected) {\n            this.onConnected()\n          }\n          break\n        case ConnectionStatus.Connecting:\n          if (this.onDisconnected) {\n            this.onDisconnected()\n          }\n          break\n      }\n    }\n\n    this.oldState.status = status\n  }\n\n  update = function(camera: THREE.Camera) {\n    if (this.freeze) {\n      return\n    }\n\n    if (this.umbra.nativeScene.ptr === 0) {\n      console.warn('Renderer tried to update a disposed UmbraScene')\n      return\n    }\n\n    let view: View = this.sharedState.cameraToView.get(camera)\n\n    if (!view) {\n      view = this.umbra.runtime.createView()\n      this.sharedState.cameraToView.set(camera, view)\n    }\n\n    this.sharedState.viewLastUseFrame.set(view, this.renderer.info.render.frame)\n\n    this.umbra.nativeScene.setTransform(this.matrixWorld.elements)\n\n    // If we are using a PBR material then we might need to flip the tangent vector\n    if (this.isPBREnabled()) {\n      // TODO(pvaananen): Would be nice to avoid recalculating the determinant every frame.\n      const flip = this.matrixWorld.determinant() < 0\n\n      if (flip !== this.shaderPatcher.flipTangent) {\n        this.shaderPatcher.flipTangent = flip\n        this.materialPool.clear()\n      }\n    }\n\n    this.stats.numVisible = 0\n    this.stats.numAssets = this.umbra.runtime.assets.size\n\n    /**\n     * Next we find the visible Umbra meshes and add them to the scene graph.\n     * This is pretty tricky, because we want more meshes to show up in the shadow map pass\n     * than in the main camera render pass. This is why 'mesh.castShadow' doesn't help here\n     * since it does the exact opposite.\n     *\n     * We use a workaround that first adds the common meshes as children of the Umbra scene\n     * object but stashes the shadow caster meshes (visible only from lights) to an extra\n     * list 'shadowCasters'.\n     *\n     * The trick is that after the children, we add a 'proxy' object that presents itself\n     * as a 'LOD' object. As a consequence it gets its own update() call, and there we go\n     * and add the shadow casters also to the children list. At this point the opaque\n     * renderable objects were already collected to their own render list, so 'children'\n     * is safe to modify.\n     *\n     * In essence, the flow is the following.\n     *\n     *    three.js                           scene object (this)\n     *    --------                           ------------------\n     *    Starts traversing three.js scene graph\n     *    Calls scene.update(cam) ---------> Updates views\n     *                                       Fetches a list of renderables\n     *                                       Adds common meshes to this.children\n     *    Adds scene.children to\n     *      the render list\n     *    Starts rendering scene.children\n     *    Calls proxy.update(cam) ---------> Proxy goes and adds shadow casters to this.children\n     *    Starts the shadow pass\n     *    Adds scene.children to shadow\n     *      render list\n     *    Renders the shadow pass\n     *    Renders the opaque pass\n     *    Renders the transparent pass\n     *\n     * As you can see, the 'this.children' list is mutated halfway through the renderer's\n     * scene graph traversal so that different object list ends up to the shadow pass render code.\n     */\n\n    // First filter away last frame's meshes\n    const newChildren = []\n    for (let i = 0; i < this.children.length; i++) {\n      if (!this.children[i].isUmbraMesh) {\n        newChildren.push(this.children[i])\n      }\n    }\n\n    this.children = newChildren\n\n    const shadowCasters = []\n\n    const proxy = new THREE.Object3D() as any\n    proxy.isLOD = true\n    proxy.autoUpdate = true\n    proxy.update = cam => {\n      // Remove the proxy itself\n      this.children.pop()\n\n      // Add the shadow casters\n      for (let i = 0; i < shadowCasters.length; i++) {\n        this.children.push(shadowCasters[i])\n      }\n    }\n\n    this.materialPool.freeAll(mat => {\n      // Remove references to textures so GC can release the three.js objects\n      delete mat.map\n      delete mat.normalMap\n      delete mat.metalnessMap\n      delete mat.roughnessMap\n    })\n\n    let visible: Renderable[] = []\n    const visibleIDs: Set<number> = new Set()\n\n    // On the first frame the view didn't yet exist when UmbrajsThreeInternal collected a list of renderables,\n    // so the list in \"viewRenderables\" may be missing.\n    if (this.sharedState.viewRenderables.has(view)) {\n      visible = this.sharedState.viewRenderables.get(view)\n    }\n\n    for (let i = 0; i < visible.length; i++) {\n      // Each view's list includes renderables of all UmbraScenes, so we need to pick only the relevant ones here.\n      if (visible[i].scenePtr !== this.umbra.nativeScene.ptr) {\n        continue\n      }\n\n      const { materialDesc, geometry } = visible[i].mesh as MeshDescriptor\n      visibleIDs.add(visible[i].id)\n      this.stats.numVisible += 1\n\n      const isTransparent = materialDesc.transparent || this.material.transparent\n\n      // Fetch a new material from the pool if we already have free ones. This avoids\n      // extra allocations and more importantly 'onBeforeCompile' calls.\n      const material = this.materialPool.allocate(\n        () => this.material.clone(),\n        (mat: THREE.Material) => {\n          return mat.transparent === isTransparent\n        },\n      )\n\n      material.wireframe = this.wireframe\n      material.opacity = this.material.opacity\n      material.transparent = isTransparent\n\n      material.onBeforeCompile = (shader, renderer) => {\n        /**\n         * If the original material already had a custom preprocessor callback we need to call\n         * that first. We need to use 'apply' in case the callback uses 'this' reference to\n         * access some material properties.\n         */\n        if (this.material.onBeforeCompile) {\n          this.material.onBeforeCompile.apply(material, [shader, renderer])\n        }\n\n        this.shaderPatcher.process(shader, renderer)\n      }\n\n      const diffuseMap = materialDesc.textures[TextureType.Diffuse]\n      const normalMap = materialDesc.textures[TextureType.Normal]\n      const metalglossMap = materialDesc.textures[TextureType.Specular]\n\n      if (diffuseMap && diffuseMap.isTexture) {\n        material.map = diffuseMap\n      }\n\n      if (normalMap && normalMap.isTexture) {\n        material.normalMap = normalMap\n        material.vertexTangents = true\n        material.normalMapType = THREE.TangentSpaceNormalMap\n      }\n\n      if (metalglossMap && metalglossMap.isTexture) {\n        material.metalnessMap = metalglossMap\n        material.metalness = 1.0\n        material.roughnessMap = metalglossMap\n        material.roughness = 1.0\n      }\n\n      /**\n       * We instatiate new Mesh objects each frame but the constructor is very cheap\n       * and the references should live for a very short time since 'this.children'\n       * gets cleared every frame.\n       */\n      const mesh = new THREE.Mesh(geometry, material) as UmbraMesh\n      mesh.isUmbraMesh = true\n      mesh.matrixWorld.copy(this.matrixWorld)\n      mesh.castShadow = this.castShadow\n      mesh.receiveShadow = this.receiveShadow\n      mesh.visible = true\n      this.children.push(mesh)\n\n      // TODO(pvaananen): Does this check work with multiple cameras?\n      if ((visible[i].mask & 0x01) === 0) {\n        shadowCasters.push(mesh)\n        mesh.frustumCulled = true\n      } else {\n        this.children.push(mesh)\n        mesh.frustumCulled = false\n      }\n    }\n\n    // Emit a warning if normals are required but missing\n    if (!this.diagnostics.missingNormals.checked && this.isPBREnabled()) {\n      for (let i = 0; i < this.children.length; i++) {\n        if (!this.children[i].isUmbraMesh) {\n          continue\n        }\n        if (!('normal' in this.children[i].geometry.attributes)) {\n          this.diagnostics.report('missingNormals')\n          break\n        }\n      }\n    }\n\n    this.stats.numShadowCasters = shadowCasters.length\n    this.stats.numCachedMaterials =\n      this.materialPool.usedList.length + this.materialPool.freeList.length\n\n    if (shadowCasters.length > 0) {\n      this.children.push(proxy)\n    }\n\n    this.updateStreamingEvents(visibleIDs)\n  }\n\n  dispose() {\n    if (this.onDispose) {\n      this.onDispose(this)\n    }\n\n    // Remove all Umbra meshes from children\n    this.children = this.children.filter((x: UmbraMesh) => !x.isUmbraMesh)\n\n    // Dispose all cached materials\n    this.materialPool.freeAll(mat => mat.dispose())\n\n    // We don't dispose mesh geometries here because they are managed by the Runtime, and\n    // Views are managed by UmbrajsThreeInternal.\n\n    this.umbra.nativeScene.destroy()\n    // Runtime must be manually freed by the user with .dispose() of the API object\n  }\n\n  private isPBREnabled() {\n    return 'normalMapType' in this.material\n  }\n}\n","import * as THREE from './ThreeWrapper'\nimport { SceneFactory } from './Scene'\n\nexport class Loader extends THREE.Loader {\n  private Umbra: SceneFactory\n  constructor(Umbra: SceneFactory, manager?: THREE.LoadingManager) {\n    super(manager)\n    this.Umbra = Umbra\n  }\n\n  loadPublic(url: string, onLoad, onProgress, onError) {\n    const model = this.Umbra.createScenePublic(url)\n\n    if (onError) {\n      model.onConnectionError = err => {\n        onError(err)\n      }\n    }\n    model.onConnected = () => {\n      delete model.onConnectionError\n      if (onProgress) {\n        onProgress(1.0)\n      }\n      onLoad(model)\n    }\n  }\n}\n","import * as THREE from './ThreeWrapper'\nimport {\n  initUmbra,\n  deinitUmbra,\n  Math as UmbraMath,\n  Assets,\n  UmbraInstance,\n  PlatformFeatures,\n  TextureSupportFlags,\n  TextureType,\n  ColorSpace,\n  Runtime,\n  View,\n  Renderable,\n  VertexBuffer,\n  JobHandlers,\n  LibraryConfig,\n} from '@umbra3d/umbrajs'\nimport { ThreeFormats } from './ThreeFormats'\nimport { SharedFrameState } from './SharedFrameState'\nimport { UmbraScene, SceneFactory, MeshDescriptor } from './Scene'\nimport { WebGLRenderer } from 'three'\nimport { HeapBufferView } from '@umbra3d/umbrajs/dist/Heap'\nimport { TextureFormat, UserPointer } from '@umbra3d/umbrajs/dist/NativeTypes'\n\nexport type UmbraCamera = THREE.Camera & {\n  umbraStreamingPosition?: THREE.Vector3\n  umbraQuality?: number\n}\n\nfunction makeBoundingSphere(aabb: UmbraMath.BoundingBox) {\n  const min = aabb[0]\n  const max = aabb[1]\n  const size = new THREE.Vector3(max[0] - min[0], max[1] - min[1], max[2] - min[2])\n  const pos = new THREE.Vector3(min[0] + size.x * 0.5, min[1] + size.y * 0.5, min[2] + size.z * 0.5)\n  return new THREE.Sphere(pos, size.length())\n}\n\nclass UmbrajsThreeInternal implements SceneFactory {\n  // Upper VRAM memory use limit in bytes\n  memoryLimit = 500 * 1024 * 1024\n  // Upper total download size limit in bytes. Turned off by default.\n  downloadLimit = 0\n  // This gets lowered automatically if memory limit is hit\n  qualityFactor = 1.0\n\n  onStreamingUpdate: (progress: number) => void\n  onStreamingComplete: () => void\n\n  // An instance of the umbrajs library for debugging\n  umbrajs: UmbraInstance\n\n  private runtime: Runtime\n  private features: PlatformFeatures\n  private renderer: WebGLRenderer\n  private updateTask: number = undefined\n\n  private assetSizes = new Map<any, number>()\n  private textureMemoryUsed = 0\n  private meshMemoryUsed = 0\n  private lastQualityLowerFrame = -1\n\n  private get memoryUsed() {\n    return this.textureMemoryUsed + this.meshMemoryUsed\n  }\n\n  private umbraScenes = new Set<UmbraScene>()\n\n  private oldState = {\n    progress: 0,\n    downloadLimitReached: false,\n  }\n\n  private sharedState: SharedFrameState = {\n    cameraToView: new Map<THREE.Camera, View>(),\n    viewRenderables: new Map<View, Renderable[]>(),\n    viewLastUseFrame: new Map<View, number>(),\n  }\n\n  // Temporary values we don't want to reallocate every frame\n  private tempVector = new THREE.Vector3()\n  private dirVector = new THREE.Vector3()\n  private matrixWorldInverse = new THREE.Matrix4()\n  private projScreenMatrix = new THREE.Matrix4()\n  private cameraWorldPosition = new THREE.Vector3()\n\n  // This class should be instantiated via initUmbra()\n  constructor(umbrajs: UmbraInstance, renderer: WebGLRenderer) {\n    let context: WebGLRenderingContext\n    // three.js r106 has no 'getContext'\n    if ('getContext' in renderer) {\n      context = renderer.getContext()\n    } else {\n      context = (renderer as any).context\n    }\n\n    // Query GL Context for supported extenions and fill platform features with that info\n    const features = umbrajs.getPlatformFeatures(context)\n\n    // Three.js does not support BC5 compressed formats so we manually disable them.\n    features.textureSupportMask &= ~TextureSupportFlags.BC5\n\n    this.umbrajs = umbrajs\n    this.runtime = umbrajs.createRuntime({ features })\n    this.runtime.setHandlers(this.handlers)\n    this.renderer = renderer\n    this.features = features\n\n    this.startEventUpdate(1000 / 60)\n  }\n\n  startEventUpdate(interval: number) {\n    this.stopEventUpdate()\n    this.updateTask = window.setInterval(() => {\n      this.updateEvents()\n      this.umbraScenes.forEach(m => (m as any).updateNetworkEvents())\n    }, interval)\n  }\n\n  stopEventUpdate() {\n    if (typeof this.updateTask !== 'undefined') {\n      window.clearInterval(this.updateTask)\n      delete this.updateTask\n    }\n  }\n\n  private findLights(umbraScene: UmbraScene): Set<THREE.DirectionalLight> {\n    let parentScene\n    umbraScene.traverseAncestors(obj => {\n      if (obj['isScene']) {\n        parentScene = obj\n      }\n    })\n\n    if (!parentScene || (parentScene && !parentScene.isScene)) {\n      return new Set()\n    }\n\n    const lights: Set<THREE.DirectionalLight> = new Set()\n    parentScene.traverseVisible((obj: THREE.Object3D) => {\n      if (obj['isDirectionalLight'] && obj['castShadow']) {\n        lights.add(obj as THREE.DirectionalLight)\n      }\n    })\n\n    return lights\n  }\n\n  private pruneOldViews(frame: number): void {\n    /**\n     * We get no notification when cameras are removed from the scene graph\n     * so we'll go and remove views based on their age.\n     */\n    for (const [view, lastUsed] of this.sharedState.viewLastUseFrame) {\n      if (frame - lastUsed < 600) {\n        continue\n      }\n\n      for (const [cam, view2] of this.sharedState.cameraToView) {\n        if (view2 === view) {\n          this.sharedState.cameraToView.delete(cam)\n          break\n        }\n      }\n      view.destroy()\n      this.sharedState.viewLastUseFrame.delete(view)\n    }\n  }\n\n  private updateViews(): void {\n    const shared = this.sharedState\n\n    const lights: Set<THREE.DirectionalLight> = new Set()\n\n    if (this.renderer.shadowMap.enabled) {\n      for (const umbraScene of this.umbraScenes) {\n        for (const light of this.findLights(umbraScene)) {\n          lights.add(light)\n        }\n      }\n    }\n\n    const dir = this.dirVector\n    const vector3 = this.tempVector\n\n    const lightDirections = Array.from(lights).map(light => {\n      dir.setFromMatrixPosition(light.target.matrixWorld)\n      vector3.setFromMatrixPosition(light.matrixWorld)\n      dir.sub(vector3)\n      return [dir.x, dir.y, dir.z]\n    }, lights)\n\n    this.pruneOldViews(this.renderer.info.render.frame)\n\n    for (const [threeCamera, view] of shared.cameraToView) {\n      const camera: UmbraCamera = threeCamera\n\n      this.matrixWorldInverse.getInverse(camera.matrixWorld)\n      this.projScreenMatrix.multiplyMatrices(camera.projectionMatrix, this.matrixWorldInverse)\n\n      // By default we stream in meshes around the camera, but user can override it.\n      if ('umbraStreamingPosition' in camera) {\n        this.cameraWorldPosition.copy(camera.umbraStreamingPosition)\n      } else {\n        camera.getWorldPosition(this.cameraWorldPosition)\n      }\n\n      let quality = 0.5\n      if ('umbraQuality' in camera) {\n        quality = camera.umbraQuality\n      }\n\n      const pos = this.cameraWorldPosition\n      view.setCamera(\n        this.projScreenMatrix.elements,\n        [pos.x, pos.y, pos.z],\n        quality * this.qualityFactor,\n        lightDirections,\n      )\n\n      let list: Renderable[] = []\n      if (shared.viewRenderables.has(view)) {\n        list = shared.viewRenderables.get(view)\n        list.length = 0\n      } else {\n        shared.viewRenderables.set(view, list)\n      }\n\n      const batchSize = 500\n      let visible: Renderable[] = []\n      do {\n        visible = view.getVisible(batchSize)\n        list.push(...visible)\n      } while (visible.length === batchSize)\n    }\n  }\n\n  update(timeBudget = 7) {\n    const downloadLimitReached =\n      this.downloadLimit !== 0 && this.getStats().maxBytesDownloaded >= this.downloadLimit\n\n    // If the limit is reached we freeze all updates. Streaming will stop completely.\n    if (downloadLimitReached) {\n      if (!this.oldState.downloadLimitReached) {\n        this.umbrajs.abortDownloads()\n      }\n    } else {\n      const start = performance.now()\n      this.runtime.update()\n      const updateTook = performance.now() - start\n      this.runtime.loadAssets(timeBudget - updateTook)\n      this.updateViews()\n    }\n\n    this.oldState.downloadLimitReached = downloadLimitReached\n\n    if (this.memoryUsed / this.memoryLimit < 0.25) {\n      this.adjustQuality(1.1)\n    }\n  }\n\n  createScene(apiKey: string, locator: string): UmbraScene {\n    if (typeof locator !== 'string') {\n      if (typeof locator === 'object') {\n        console.error(\n          'Connection with an {key, project, model} object is deprecated. Use a locator string instead.',\n        )\n      }\n      throw new TypeError('expected a string argument')\n    }\n\n    const umbraScene = new UmbraScene(\n      this.runtime,\n      this.runtime.createScene(apiKey, locator),\n      this.sharedState,\n      this.renderer,\n      this.features,\n      s => this.umbraScenes.delete(s),\n    )\n    this.umbraScenes.add(umbraScene)\n    return umbraScene\n  }\n\n  createScenePublic(link: string): UmbraScene {\n    if (typeof link !== 'string') {\n      if (typeof link === 'object') {\n        console.error(\n          'Connection with an {key, project, model} object is deprecated. Use a public link string instead.',\n        )\n      }\n      throw new TypeError('expected a string argument')\n    }\n\n    const umbraScene = new UmbraScene(\n      this.runtime,\n      this.runtime.createScenePublic(link),\n      this.sharedState,\n      this.renderer,\n      this.features,\n      s => this.umbraScenes.delete(s),\n    )\n    this.umbraScenes.add(umbraScene)\n    return umbraScene\n  }\n\n  createSceneLocal(url: string): UmbraScene {\n    const scene = this.runtime.createSceneLocal(url)\n    const umbraScene = new UmbraScene(\n      this.runtime,\n      scene,\n      this.sharedState,\n      this.renderer,\n      this.features,\n      s => this.umbraScenes.delete(s),\n    )\n    this.umbraScenes.add(umbraScene)\n    return umbraScene\n  }\n\n  createSceneWithURL(url: string): UmbraScene {\n    return this.createSceneLocal(url)\n  }\n\n  /**\n   * Returns streaming information. We can't tell which files came from the browser cache\n   * so we report lower and upper limits of the true download size.\n   *\n   * The returned object has the following fields:\n   *\n   *  'maxBytesDownloaded' an upper limit assuming no file was cached,\n   *  'minBytesDownloaded' the corresponding lower limit assuming all duplicates came from cache.\n   *  'textureMemoryUse' the number of bytes used by texture assets\n   *  'meshMemoryUse' the number of bytes used by mesh assets\n   *\n   */\n  getStats() {\n    return Object.assign(this.umbrajs.getStreamingInfo(), {\n      textureMemoryUsed: this.textureMemoryUsed,\n      meshMemoryUsed: this.meshMemoryUsed,\n    })\n  }\n\n  private canFitInMemory(bytes: number) {\n    return this.memoryUsed + bytes < this.memoryLimit\n  }\n\n  private adjustQuality(factor: number) {\n    if (this.renderer.info.render.frame == this.lastQualityLowerFrame) {\n      return\n    }\n    this.qualityFactor = Math.max(0, Math.min(1, this.qualityFactor * factor))\n    this.lastQualityLowerFrame = this.renderer.info.render.frame\n  }\n\n  // Converts a texture descriptor and a pixel buffer to a three.js compatible texture\n  private makeTexture(\n    info,\n    buffer: HeapBufferView,\n    glformat,\n  ): THREE.CompressedTexture | THREE.DataTexture {\n    const pixelData = buffer.getArray().slice() as THREE.TypedArray\n\n    let tex\n    if (glformat.compressed) {\n      const mip = {\n        width: info.width,\n        height: info.height,\n        data: pixelData as Uint8ClampedArray,\n      }\n      tex = new THREE.CompressedTexture([mip], info.width, info.height)\n    } else {\n      tex = new THREE.DataTexture(pixelData, info.width, info.height)\n    }\n\n    tex.format = glformat.format\n    tex.type = glformat.type\n    tex.magFilter = THREE.LinearFilter\n    tex.minFilter = THREE.LinearFilter\n    tex.anisotropy = 0\n\n    return tex\n  }\n\n  // AssetLoad handlers that create and remove materials, textures, and meshes\n  private handlers: JobHandlers = {\n    LoadMaterial: (data: Assets.MaterialData, assetID: UserPointer) => {\n      const material = data\n      material.transparent = data.transparent ? true : false\n      this.runtime.addAsset(assetID, material)\n      return Assets.AssetLoadResult.Success\n    },\n    UnloadMaterial: (asset: any, assetID: UserPointer) => {\n      this.runtime.removeAsset(assetID)\n    },\n    LoadTexture: (data: Assets.TextureData, assetID: UserPointer) => {\n      const info = data.info\n      const buffer = data.buffer\n\n      let glformat\n\n      if (ThreeFormats.hasOwnProperty(info.format)) {\n        glformat = ThreeFormats[info.format]\n      }\n\n      if (!glformat) {\n        // At the moment we ignore \"UINT32\" textures because they can't be rendered with stock three.js shaders.\n        if (info.format !== TextureFormat.UINT32) {\n          // For others we emit a message since this shouldn't happen.\n          console.log('Unknown texture format', TextureFormat[info.format])\n        }\n\n        // Add a dummy object for unknown formats. They will appear as a solid black color.\n        this.runtime.addAsset(assetID, { isTexture: false })\n        return Assets.AssetLoadResult.Success\n      }\n\n      if (!this.canFitInMemory(buffer.size)) {\n        this.adjustQuality(0.8)\n        return Assets.AssetLoadResult.OutOfMemory\n      }\n\n      const tex = this.makeTexture(info, buffer, glformat)\n\n      /**\n       * A workaround for the case where we directly output colors in gamma space.\n       * We make diffuse textures linear to avoid gamma expansion at texture fetch time.\n       * This is slightly wrong because texture filtering and shading will be done\n       * in gamma space, but this behavior is what people usually expect.\n       */\n      let gammaOutput = false\n      if ('outputEncoding' in this.renderer) {\n        // three.js version 112 and after\n        gammaOutput = this.renderer['outputEncoding'] === THREE.sRGBEncoding\n      } else if ('gammaOutput' in this.renderer) {\n        // three.js prior to version 112\n        gammaOutput = this.renderer['gammaOutput']\n      }\n\n      if (info.type === TextureType.Diffuse && !gammaOutput) {\n        tex.encoding = THREE.LinearEncoding\n      } else {\n        tex.encoding =\n          info.colorSpace === ColorSpace.Linear ? THREE.LinearEncoding : THREE.sRGBEncoding\n      }\n\n      tex.needsUpdate = true\n\n      this.textureMemoryUsed += buffer.size\n      this.assetSizes.set(tex, buffer.size)\n      this.runtime.addAsset(assetID, tex)\n      return Assets.AssetLoadResult.Success\n    },\n    UnloadTexture: (texture: any, assetID: UserPointer) => {\n      // Free texture data only if it's not a dummy texture\n      if (texture.isTexture) {\n        texture.dispose()\n      }\n\n      if (this.assetSizes.has(texture)) {\n        this.textureMemoryUsed -= this.assetSizes.get(texture)\n        this.assetSizes.delete(texture)\n      }\n\n      this.runtime.removeAsset(assetID)\n    },\n    LoadMesh: (data: Assets.MeshData, assetID: UserPointer) => {\n      /**\n       * LoadMesh gives us all the vertex data in load.data.buffers.\n       * The buffers are only valid during this handler, and the memory will be\n       * reused for other meshes later. Therefore we make copies of the arrays\n       * for three.js which is something we would have to do anyway.\n       */\n\n      const attribs = {\n        position: { components: 3 },\n        normal: { components: 3 },\n        uv: { components: 2 },\n        tangent: { components: 3 },\n      }\n\n      let totalSize = 0\n      Object.keys(attribs)\n        .map(name => data.buffers[name])\n        .forEach(buffer => {\n          if (buffer) {\n            totalSize += buffer.data.size\n          }\n        })\n\n      if (!this.canFitInMemory(totalSize)) {\n        this.adjustQuality(0.8)\n        return Assets.AssetLoadResult.OutOfMemory\n      }\n\n      const geometry = new THREE.BufferGeometry()\n      const indexArray = data.buffers['index'].data.getArray()\n      const indices = Array.from(indexArray as any)\n      geometry.setIndex(indices as number[])\n      geometry.boundingSphere = makeBoundingSphere(data.bounds)\n\n      Object.keys(attribs).forEach(name => {\n        const buffer = data.buffers[name] as VertexBuffer\n\n        if (buffer) {\n          const view = buffer.data\n          const array = view.getArray()\n          const attrib = new THREE.Float32BufferAttribute(array.slice(), attribs[name].components)\n\n          if ('setAttribute' in (geometry as any)) {\n            // three.js v112\n            geometry['setAttribute'](name, attrib)\n          } else {\n            // three.js prior to v112\n            geometry['addAttribute'](name, attrib)\n          }\n        }\n      })\n\n      const mesh: MeshDescriptor = {\n        geometry,\n        materialDesc: data.material,\n      }\n\n      this.meshMemoryUsed += totalSize\n      this.assetSizes.set(mesh, totalSize)\n      this.runtime.addAsset(assetID, mesh)\n      return Assets.AssetLoadResult.Success\n    },\n    UnloadMesh: (mesh: any, assetID: UserPointer) => {\n      if (this.assetSizes.has(mesh)) {\n        this.meshMemoryUsed -= this.assetSizes.get(mesh)\n        this.assetSizes.delete(mesh)\n      }\n      // Tell Umbra's runtime that this asset doesn't exist anymore\n      this.runtime.removeAsset(assetID)\n      // Release three.js's resources\n      mesh.geometry.dispose()\n    },\n  }\n\n  private updateEvents() {\n    const progress = this.getStreamingProgress()\n    if (this.oldState.progress != progress) {\n      if (this.onStreamingUpdate) {\n        this.onStreamingUpdate(progress)\n      }\n      if (progress === 1.0 && this.onStreamingComplete) {\n        this.onStreamingComplete()\n      }\n    }\n\n    this.oldState.progress = progress\n  }\n\n  getStreamingProgress(): number {\n    return this.runtime.getStreamingProgress()\n  }\n\n  dispose() {\n    this.stopEventUpdate()\n\n    for (const view of this.sharedState.cameraToView.values()) {\n      view.destroy()\n    }\n\n    this.umbraScenes.forEach((m: UmbraScene) => m.dispose())\n\n    this.sharedState.cameraToView.clear()\n    this.umbraScenes.clear()\n\n    this.runtime.assets.forEach((asset, userPtr) => {\n      if ('geometry' in asset) {\n        asset.geometry.dispose()\n      }\n      if ('dispose' in asset) {\n        asset.dispose()\n      }\n    })\n\n    this.assetSizes.clear()\n    this.textureMemoryUsed = 0\n    this.meshMemoryUsed = 0\n\n    this.runtime.destroy()\n    this.runtime = undefined\n\n    deinitUmbra(this.umbrajs)\n  }\n}\n\nexport function initWithThreeJS(renderer: THREE.WebGLRenderer, userConfig: LibraryConfig) {\n  if (!renderer) {\n    throw new TypeError('\"renderer\" should be of type THREE.WebGLRenderer')\n  }\n\n  return initUmbra(userConfig).then(Umbra => {\n    return new UmbrajsThreeInternal(Umbra, renderer)\n  })\n}\n\n// Hide the library object constructor by wrapping it in an interface\ninterface UmbrajsThree extends UmbrajsThreeInternal {}\nexport { UmbraScene as Scene, UmbrajsThree }\nexport { Loader } from './Loader'\n"],"names":["_scriptDir","MatrixFormat","TextureType","TextureFormat","ColorSpace","VertexAttribute","BufferFlags","LogLevel","TransferStatus","HeaderError","HttpMethod","LibraryInfo","InvalidUserPointer","TextureSupportFlags","RuntimeFlags","ConnectionStatus","DepthRange","FilterShapeType","SceneCopyStatus","SceneCopyDestinationType","SceneCopySourceType","AssetType","AssetLoadResult","RayQueryFlags","UmbraNativeAPI","document","currentScript","src","undefined","c","r","p","hasOwnProperty","aa","a","b","v","indexOf","substr","lastIndexOf","ea","y","fa","ba","print","console","log","bind","w","printErr","warn","ca","Math","ceil","quit","wasmBinary","noExitRuntime","WebAssembly","z","ha","Table","initial","maximum","element","A","ia","B","ja","ka","d","e","f","string","length","ma","la","array","C","set","g","k","h","l","na","D","apply","oa","sa","E","ta","ua","F","G","va","wa","pa","TextDecoder","qa","subarray","decode","String","fromCharCode","charCodeAt","ra","xa","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","ya","TOTAL_MEMORY","Aa","shift","Mb","Jb","dynCall_v","dynCall_vi","wasmMemory","Memory","buffer","byteLength","Ba","Ca","Da","Ea","Fa","Ga","preRun","unshift","H","Ia","onAbort","RuntimeError","Ja","I","prototype","startsWith","preloadedImages","preloadedAudios","Ka","locateFile","La","Oa","8103","alert","9294","9575","n","u","q","t","XMLHttpRequest","open","withCredentials","responseType","x","lc","mc","onload","status","response","URLsDownloaded","maxBytesDownloaded","has","add","minBytesDownloaded","dynCall_viii","dynCall_viiii","wc","S","Z","onerror","onabort","setRequestHeader","btoa","split","send","slice","Na","Pa","Ra","push","Qa","Sa","Ta","J","Ua","Va","Wa","Xa","pop","Ya","this","fromWireType","K","L","Za","$a","replace","ab","Function","bb","Error","name","message","stack","toString","Object","create","constructor","cb","db","M","forEach","Array","eb","TypeError","fb","O","gb","P","Wb","hb","Q","value","ib","Nb","R","jb","kb","lb","nb","Hb","arguments","Qb","mb","pc","pb","FUNCTION_TABLE","join","qb","rb","sb","ub","T","vb","wb","xb","yb","V","Fb","Gb","U","W","Eb","Kb","Cb","Db","Ob","Lb","Rb","Sb","Tb","Ub","pointerLockElement","canvas","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","preloadPlugins","Vb","Xb","MozBlobBuilder","WebKitBlobBuilder","Yb","window","URL","webkitURL","Pb","canHandle","test","handle","Blob","type","Zb","size","da","append","getBlob","createObjectURL","Image","complete","createElement","width","height","getContext","drawImage","revokeObjectURL","oc",".ogg",".wav",".mp3","Audio","addEventListener","setTimeout","$b","requestPointerLock","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","exitPointerLock","mozExitPointerLock","webkitExitPointerLock","msExitPointerLock","elementPointerLock","preventDefault","bc","cc","Y","dc","parentNode","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","webkitCurrentFullScreenElement","exitFullscreen","ec","SDL","screen","fc","gc","insertBefore","removeChild","onFullScreen","onFullscreen","appendChild","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","webkitRequestFullScreen","rc","ic","cancelFullScreen","mozCancelFullScreen","msExitFullscreen","webkitCancelFullScreen","jc","Ib","requestAnimationFrame","Date","now","max","jpg","jpeg","png","bmp","ogg","wav","mp3","kc","forcedAspectRatio","round","min","style","removeProperty","setProperty","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","nc","onupgradeneeded","target","result","transaction","objectStoreNames","contains","objectStore","createObjectStore","onsuccess","error","qc","tc","onExit","_exit","InternalError","uc","vc","BindingError","count_emval_handles","get_first_emval","UnboundTypeError","requestFullScreen","setCanvasSize","pauseMainLoop","resumeMainLoop","setStatus","statusMessage","preMainLoop","postMainLoop","audio","setImmediate","data","stopPropagation","postMessage","Bb","getUserMedia","navigator","mozGetUserMedia","createContext","antialias","alpha","GL","GLctx","ac","dateNow","performance","_fflush","zc","stat","N","s","map","concat","za","read","write","toWireType","argPackAdvance","readValueFromPointer","ob","tb","m","X","o","ArrayBuffer","Uint8ClampedArray","i","j","Ab","deleteObject","zb","abort","get","xc","yc","put","sc","grow","hc","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","getTime","UTC","memory","table","Ac","asm","exports","monitorRunDependencies","instance","fetch","Promise","credentials","then","ok","arrayBuffer","catch","instantiate","env","wasi_unstable","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_UmbraMeshLoadGetInfo","_","_UmbraMeshLoadGetSerializedSize","$","_UmbraMeshLoadSerialize","_UmbraAssetLoadGetType","_UmbraTextureLoadGetInfo","_UmbraTextureLoadGetSerializedSize","_UmbraTextureLoadSerialize","_UmbraGeodeticToEcef","_UmbraEcefToGeodetic","ga","_UmbraTextureGetMipmapLevelByteSize","_UmbraTextureGetMipmapLevelOffset","_malloc","_UmbraMeshLoadFinishExternal","_free","_UmbraConfigInit","_UmbraSetAllocator","_UmbraSetLogger","_UmbraSetHttp","_UmbraClientCreate","_UmbraClientDestroy","_UmbraGetLibraryInfo","_UmbraEnvironmentInfoDefaults","_UmbraRuntimeCreate","_UmbraRuntimeDestroy","_UmbraRuntimeUpdate","_UmbraRuntimeGetStreamingState","_UmbraRuntimeNextAssetUnload","_UmbraAssetUnloadFinish","_UmbraAssetUnloadGetType","_UmbraAssetUnloadGetUserPointer","_UmbraRuntimeNextAssetLoad","_UmbraAssetLoadPrepare","_UmbraAssetLoadFinish","_UmbraAssetLoadAbortRequested","_UmbraVertexAttributeGetElementByteSize","_UmbraMeshLoadGetData","Ha","_UmbraMeshStreamSetBuffers","_UmbraMeshStreamDone","_UmbraMeshStreamNext","_UmbraMaterialLoadGetInfo","_UmbraTextureLoadGetData","Ma","_UmbraTextureMetaDataLoadGetData","_UmbraTextureMetaDataGetClassificationCount","_UmbraTextureMetaDataGetClassification","_UmbraTextureMetaDataGetClassificationAmount","_UmbraSceneCreate","_UmbraSceneCreatePublic","_UmbraSceneCreateLocal","_UmbraSceneDestroy","_UmbraSceneGetConnectionStatus","_UmbraSceneGetInfo","_UmbraSceneSetTransform","_UmbraSceneCopyCreate","_UmbraSceneCopyDestroy","_UmbraSceneCopyGetStatus","_a","_UmbraSceneCopyGetError","_UmbraViewCreate","_UmbraViewDestroy","_UmbraViewUpdateRendering","_UmbraViewUpdateFilter","_UmbraViewGetCompleted","_UmbraViewResetRenderables","_UmbraViewNextRenderables","_UmbraViewRayQuery","_UmbraSendInternalMessage","___getTypeName","___embind_register_native_and_builtin_types","stackSave","stackAlloc","stackRestore","dynCall_iiiiiiiiii","dynCall_viiiiiiiii","dynCall_iiiii","dynCall_iiii","dynCall_iii","dynCall_ii","dynCall_vii","dynCall_iiiiii","dynCall_viiiii","dynCall_iiiiiiii","dynCall_viiiiiii","dynCall_i","Bc","Dc","onRuntimeInitialized","postRun","dynCall_jiji","dynCall_iidiiii","dynCall_viiiiii","cwrap","every","Cc","run","preInit","Set","wgetRequests","Primitive","WorkerPool","[object Object]","numWorkers","workerScriptURL","workers","infos","aborted","worker","Worker","onmessage","msg","userData","resolve","queue","reject","info","terminate","id","funcName","transferObject","callbackId","best_id","best","shortest","sum","assertInteger","Number","isInteger","isArrayLike","isArray","isView","DataView","Module","primitiveToArrayType","Map","textureFormatToPrimitive","RGB565","RGBA32","RG8","RG16F","RGB_FLOAT32","RGB24","UINT32","Buffer","ptr","umbraAlloc","umbraFree","newSize","destroy","HeapView","primitiveToHeap","heapName","arrayType","BYTES_PER_ELEMENT","renderableStructOffsets","getRenderableMemberOffsets","copyMat4","buf","elements","Client","configPtr","CONFIG_SIZE","configInit","clientCreate","clientDestroy","NativeScene","matrixBuffer","infoBuffer","sceneInfoSize","sceneDestroy","sceneGetConnectionStatus","sceneGetInfo","deserializeSceneInfo","connectionStatus","Native.ConnectionStatus","Connected","matrix","floats","sceneSetTransform","View","runtimeAssets","vectorBuffer","lightBuffer","MAX_LIGHTS","temp","viewDestroy","worldToClip","positionVector","quality","lights","depthRange","Native.DepthRange","MinusOneToOne","matrixFormat","Native.MatrixFormat","ColumnMajor","viewUpdateRendering","batchSize","bufferSize","renderableSize","strideInWords","bufferWordSize","getView","heap","ofs","meshIDs","lodLevels","masks","scenePointers","count","viewNextRenderables","output","lod","mask","scenePtr","mesh","AssetLoad","assetUserPointer","assetType","assetLoadGetType","assetLoadPrepare","assetLoadFinish","AssetUnload","assetUnloadGetType","userPointer","assetUnloadGetUserPointer","assetUnloadFinish","Runtime","client","features","textureSupportMask","formats","srgb","halfFloat","flags","assets","nextId","tempTextureBuffer","tempStreamingStateBuffer","streamingStateSize","tempDispatchBuffer","stats","numUpdates","meshPipelineMemoryUse","texturePipelineMemoryUse","numWorkerLoadsPending","perFrameLoadedTextures","perFrameLoadedTextureBytes","perFrameLoadedMeshes","perFrameLoadedMeshBytes","numInstantUnloads","assetLoadTimes","limits","streamingPipeSizeLimit","maxWorkQueueLength","loadPromises","normalFormats","ETC1","ASTC","PVRTC1","BC5","BC4","infoPtr","serializeEnvironmentInfo","textureSupportFlags","localCacheDirectory","localCacheMaximumByteSize","runtimeCreate","platformFeatures","scratchSize","meshInfoSize","materialInfoSize","textureInfoSize","byteBufferSize","scratch","debug","textureFormatsInUse","trackInstantUnloads","hardwareConcurrency","workerPool","runtimeDestroy","publicKey","sceneCreatePublic","apiKey","locator","sceneCreate","url","sceneCreateLocal","handlers","viewPtr","viewCreate","runtimeUpdate","runtimeNextAssetUnload","unload","load","textureLoadGetInfo","texture","deserializeTextureInfo","needsTranscoding","formatNeedsTranscoding","format","textureData","prepare","uncompressedTexturePtr","serSize","textureLoadGetSerializedSize","textureLoadDispatchSize","textureLoadDispatchHeaderSize","ensureSize","dispatchBuffer","convertAssetLoadToTextureDispatch","finish","Failure","memoryUseEstimate","findMostAvailableWorker","callWorker","bytes","memoryUse","umbraTexture","deserializeTextureLoadResult","textureInfo","datatype","textureLoadResultHeaderSize","dataByteSize","serializeByteBuffer","byteSize","textureLoadGetData","Success","materialLoadGetInfo","deserializeMaterialInfo","texturePtrs","textures","filter","INVALID_USERPOINTER","texturePromises","resultsAndErrors","all","delete","results","Aborted","textureObjects","materialData","transparent","meshLoadGetInfo","deserializeMeshInfo","serializedSize","meshLoadGetSerializedSize","dispatchSize","meshLoadDispatchHeaderSize","desc","convertAssetLoadToMeshDispatch","materialUserPointer","material","materialPromise","meshLoadResultHeaderSize","workerId","Assets.AssetLoadResult","bufferByteSize","obj","deserializeMeshLoadResult","failureMessage","failed","assetLoad","basePtr","bufferDescs","meshLoadResultBuildUmbraBuffers","attributeArrayType","position","uv","normal","tangent","index","elementByteSize","meshAttributes","keys","vbuf","elemBuf","attributeArraySize","elementCapacity","elementStride","materialAsset","meshData","buffers","bounds","mn","mx","meshLoadFinishExternalWithLoadResultHeader","timeLimit","startTime","getAssetUnloads","created","asset","loadPtr","runtimeNextAssetLoad","promise","getNextUserPointer","dispatchTextureLoad","dispatchMaterialLoad","dispatchMeshLoad","pipelineMemoryUsed","shortestQueueLength","numLoadsPending","userPtr","assetID","BC1","BC3","runtimeGetStreamingState","deserializeStreamingState","state","getStreamingState","numResidentTiles","numResidentTilesLoaded","createRuntime","config","umbraLibraryConfig","umbrajsScriptDir","dir","initUmbra","defaults","wasmURL","assign","path","prefix","endsWith","what","getLibraryInfo","environmentInfoDefaults","viewUpdateFilter","viewGetCompleted","viewResetRenderables","viewRayQuery","sceneCopyCreate","sceneCopyGetStatus","sceneCopyGetError","sceneCopyDestroy","vertexAttributeGetElementByteSize","assetLoadAbortRequested","meshLoadFinishExternal","meshLoadGetData","meshStreamSetBuffers","meshStreamNext","meshStreamDone","textureGetMipmapLevelByteSize","textureGetMipmapLevelOffset","textureMetaDataLoadGetData","textureMetaDataGetClassificationCount","textureMetaDataGetClassification","textureMetaDataGetClassificationAmount","sendInternalMessage","wrapNativeFunctions","lib","getPlatformFeatures","gl","supportsSRGB","supportsHalfFloat","extStrings","extNames","allExtensions","getSupportedExtensions","full","shortened","mapping","BC2","names","key","includes","getExtension","nativeModule","wrappers.create","getStreamingInfo","version","Native.LibraryInfo","Version","copyright","Copyright","buildTime","BuildTime","buildID","BuildId","abortDownloads","values","req","makeFormat","compressed","ThreeFormats","THREE.RGBFormat","THREE.UnsignedByteType","THREE.RGBAFormat","THREE.UnsignedShort565Type","THREE.LuminanceAlphaFormat","THREE.HalfFloatType","THREE.RGBA_S3TC_DXT1_Format","THREE.RGBA_S3TC_DXT5_Format","ETC1_RGB","THREE.RGB_ETC1_Format","ASTC_4X4","THREE.RGBA_ASTC_4x4_Format","PVRTC1_RGB4","THREE.RGB_PVRTC_4BPPV1_Format","ShaderPatcher","flipTangent","defines","shader","renderer","frag","fragmentShader","ObjectPool","makeFunc","predicate","freeList","elem","splice","usedList","clearFunc","UmbraScene","THREE.Object3D","runtime","scene","sharedState","onDispose","super","THREE.MeshBasicMaterial","numVisible","numShadowCasters","numCachedMaterials","numAssets","missingNormals","checked","deprecatedMaterial","report","field","diagnostics","visibleIDs","camera","freeze","umbra","nativeScene","view","cameraToView","createView","viewLastUseFrame","render","frame","setTransform","matrixWorld","isPBREnabled","flip","determinant","shaderPatcher","materialPool","clear","newChildren","children","isUmbraMesh","shadowCasters","proxy","isLOD","autoUpdate","update","cam","freeAll","mat","normalMap","metalnessMap","roughnessMap","visible","viewRenderables","materialDesc","geometry","isTransparent","allocate","clone","wireframe","opacity","onBeforeCompile","process","diffuseMap","Diffuse","Normal","metalglossMap","Specular","isTexture","vertexTangents","normalMapType","THREE.TangentSpaceNormalMap","metalness","roughness","THREE.Mesh","copy","castShadow","receiveShadow","frustumCulled","attributes","updateStreamingEvents","scale","opaqueMaterial","connected","isConnected","getInfo","THREE.Box3","THREE.Vector3","getBounds","applyMatrix4","center","getCenter","oldState","onMeshChanged","onConnectionChanged","ConnectionError","onConnectionError","onConnected","Connecting","onDisconnected","dispose","Loader","THREE.Loader","Umbra","manager","onLoad","onProgress","onError","model","createScenePublic","err","UmbrajsThreeInternal","umbrajs","context","progress","downloadLimitReached","THREE.Matrix4","LoadMaterial","addAsset","UnloadMaterial","removeAsset","LoadTexture","glformat","canFitInMemory","adjustQuality","OutOfMemory","tex","makeTexture","gammaOutput","THREE.sRGBEncoding","encoding","colorSpace","Linear","THREE.LinearEncoding","needsUpdate","textureMemoryUsed","assetSizes","UnloadTexture","LoadMesh","attribs","components","totalSize","THREE.BufferGeometry","indexArray","getArray","indices","from","setIndex","boundingSphere","aabb","pos","THREE.Sphere","makeBoundingSphere","attrib","THREE.Float32BufferAttribute","meshMemoryUsed","UnloadMesh","setHandlers","startEventUpdate","memoryUsed","interval","stopEventUpdate","updateTask","setInterval","updateEvents","umbraScenes","updateNetworkEvents","clearInterval","umbraScene","parentScene","traverseAncestors","isScene","traverseVisible","lastUsed","view2","shared","shadowMap","enabled","light","findLights","dirVector","vector3","tempVector","lightDirections","setFromMatrixPosition","sub","pruneOldViews","threeCamera","matrixWorldInverse","getInverse","projScreenMatrix","multiplyMatrices","projectionMatrix","cameraWorldPosition","umbraStreamingPosition","getWorldPosition","umbraQuality","setCamera","qualityFactor","list","getVisible","timeBudget","downloadLimit","getStats","start","updateTook","loadAssets","updateViews","memoryLimit","createScene","link","createSceneLocal","factor","lastQualityLowerFrame","pixelData","mip","THREE.CompressedTexture","THREE.DataTexture","magFilter","THREE.LinearFilter","minFilter","anisotropy","getStreamingProgress","onStreamingUpdate","onStreamingComplete","privateUmbra","deinitUmbra","userConfig"],"mappings":"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"}